
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000692  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000061e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  00000692  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000692  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000704  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000760  00000000  00000000  0000074c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000685  00000000  00000000  00000eac  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000032b  00000000  00000000  00001531  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000120  00000000  00000000  0000185c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000038b  00000000  00000000  0000197c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000201  00000000  00000000  00001d07  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00001f08  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__vector_9>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 bf 00 	jmp	0x17e	; 0x17e <__vector_13>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__vector_16>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 08 01 	jmp	0x210	; 0x210 <__vector_21>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a4 30       	cpi	r26, 0x04	; 4
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 55 00 	call	0xaa	; 0xaa <main>
  88:	0c 94 0d 03 	jmp	0x61a	; 0x61a <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <setupADC>:
    }
}
void setupADC()
{
	
	ADMUX = (1 << REFS0) | (1 << MUX0) | (1 << MUX1);
  90:	83 e4       	ldi	r24, 0x43	; 67
  92:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA = 0xaf;
  96:	8f ea       	ldi	r24, 0xAF	; 175
  98:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	//ADCSRA = (1 << ADEN) | (1 << ADIE) | (1 << ADPS0) | (1 << ADPS1) | (1 << ADPS2) | (1 << ADATE);
	ADCSRB = (1 << ADTS2) | (1 << ADTS1);
  9c:	86 e0       	ldi	r24, 0x06	; 6
  9e:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
	DIDR0 = (1 << ADC3D);
  a2:	88 e0       	ldi	r24, 0x08	; 8
  a4:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
  a8:	08 95       	ret

000000aa <main>:


int main(void)
{	
	
	DDRD = (1 << PORTD6) | (1 << PORTD5) | (1 << PORTD3);
  aa:	88 e6       	ldi	r24, 0x68	; 104
  ac:	8a b9       	out	0x0a, r24	; 10
	DDRB = (1 << PORTB3) | (1 << PORTB1);
  ae:	8a e0       	ldi	r24, 0x0A	; 10
  b0:	84 b9       	out	0x04, r24	; 4
		
	
	
	//計數器0為三色LED控制、1為pm2.5的脈波訊號、2為馬達的控制
	TCCR0A = (1 << COM0A1) | (1 << COM0B1) | (1 << WGM00);
  b2:	81 ea       	ldi	r24, 0xA1	; 161
  b4:	84 bd       	out	0x24, r24	; 36
	TCCR1A = (1 << COM1A1) | (1 << COM1A0) | (1 << WGM10);
  b6:	81 ec       	ldi	r24, 0xC1	; 193
  b8:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR2A = (1 << COM2A1) | (1 << WGM20) | (1 << WGM21);
  bc:	83 e8       	ldi	r24, 0x83	; 131
  be:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
	TIMSK0 = (1 << TOIE0);
  c2:	c1 e0       	ldi	r28, 0x01	; 1
  c4:	c0 93 6e 00 	sts	0x006E, r28	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	TIMSK1 = (1 << TOIE1);
  c8:	c0 93 6f 00 	sts	0x006F, r28	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	TIMSK2 = (1 << TOIE2);
  cc:	c0 93 70 00 	sts	0x0070, r28	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
	
	setupADC();
  d0:	0e 94 48 00 	call	0x90	; 0x90 <setupADC>
	
	sei();
  d4:	78 94       	sei
	
	TCCR0B = (1 << CS00);
  d6:	c5 bd       	out	0x25, r28	; 37
	TCCR1B = (1 << CS10) | (1 << CS12) | (1 << WGM12);
  d8:	8d e0       	ldi	r24, 0x0D	; 13
  da:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	TCCR2B = (1 << CS20) | (1 << CS21) | (1 << CS22);
  de:	87 e0       	ldi	r24, 0x07	; 7
  e0:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>

	OCR1A = 251;
  e4:	8b ef       	ldi	r24, 0xFB	; 251
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  ec:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
			OCR0A = 255;
			OCR0B = 0;
		}
		else //purple
		{
			OCR0A = 100;
  f0:	0f 2e       	mov	r0, r31
  f2:	f4 e6       	ldi	r31, 0x64	; 100
  f4:	bf 2e       	mov	r11, r31
  f6:	f0 2d       	mov	r31, r0
			OCR0A = 230;
			OCR0B = 255;
		}
		else if (dutyCycle < 200 ) //red
		{
			OCR0A = 255;
  f8:	cf ef       	ldi	r28, 0xFF	; 255
			OCR0A = 180;
			OCR0B = 247;
		}
		else if (dutyCycle < 150) //orange
		{
			OCR0A = 230;
  fa:	06 ee       	ldi	r16, 0xE6	; 230
			OCR0A = 0;
			OCR0B = 255;
		}
		else if (dutyCycle < 100 ) //yellow
		{	
			OCR0A = 180;
  fc:	14 eb       	ldi	r17, 0xB4	; 180
			OCR0B = 247;
  fe:	d7 ef       	ldi	r29, 0xF7	; 247
	OCR1A = 251;
	
    while(1)
    {
        //TODO:: Please write your application code
		if (dutyCycle < 50 ) //green
 100:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <_edata>
 104:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <_edata+0x1>
 108:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <_edata+0x2>
 10c:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <_edata+0x3>
 110:	20 e0       	ldi	r18, 0x00	; 0
 112:	30 e0       	ldi	r19, 0x00	; 0
 114:	48 e4       	ldi	r20, 0x48	; 72
 116:	52 e4       	ldi	r21, 0x42	; 66
 118:	c7 01       	movw	r24, r14
 11a:	b6 01       	movw	r22, r12
 11c:	0e 94 b5 01 	call	0x36a	; 0x36a <__cmpsf2>
 120:	88 23       	and	r24, r24
 122:	1c f4       	brge	.+6      	; 0x12a <main+0x80>
		{
			OCR0A = 0;
 124:	17 bc       	out	0x27, r1	; 39
			OCR0B = 255;
 126:	c8 bd       	out	0x28, r28	; 40
 128:	eb cf       	rjmp	.-42     	; 0x100 <main+0x56>
		}
		else if (dutyCycle < 100 ) //yellow
 12a:	20 e0       	ldi	r18, 0x00	; 0
 12c:	30 e0       	ldi	r19, 0x00	; 0
 12e:	48 ec       	ldi	r20, 0xC8	; 200
 130:	52 e4       	ldi	r21, 0x42	; 66
 132:	c7 01       	movw	r24, r14
 134:	b6 01       	movw	r22, r12
 136:	0e 94 b5 01 	call	0x36a	; 0x36a <__cmpsf2>
 13a:	88 23       	and	r24, r24
 13c:	1c f4       	brge	.+6      	; 0x144 <main+0x9a>
		{	
			OCR0A = 180;
 13e:	17 bd       	out	0x27, r17	; 39
			OCR0B = 247;
 140:	d8 bd       	out	0x28, r29	; 40
 142:	de cf       	rjmp	.-68     	; 0x100 <main+0x56>
		}
		else if (dutyCycle < 150) //orange
 144:	20 e0       	ldi	r18, 0x00	; 0
 146:	30 e0       	ldi	r19, 0x00	; 0
 148:	46 e1       	ldi	r20, 0x16	; 22
 14a:	53 e4       	ldi	r21, 0x43	; 67
 14c:	c7 01       	movw	r24, r14
 14e:	b6 01       	movw	r22, r12
 150:	0e 94 b5 01 	call	0x36a	; 0x36a <__cmpsf2>
 154:	88 23       	and	r24, r24
 156:	1c f4       	brge	.+6      	; 0x15e <main+0xb4>
		{
			OCR0A = 230;
 158:	07 bd       	out	0x27, r16	; 39
			OCR0B = 255;
 15a:	c8 bd       	out	0x28, r28	; 40
 15c:	d1 cf       	rjmp	.-94     	; 0x100 <main+0x56>
		}
		else if (dutyCycle < 200 ) //red
 15e:	20 e0       	ldi	r18, 0x00	; 0
 160:	30 e0       	ldi	r19, 0x00	; 0
 162:	48 e4       	ldi	r20, 0x48	; 72
 164:	53 e4       	ldi	r21, 0x43	; 67
 166:	c7 01       	movw	r24, r14
 168:	b6 01       	movw	r22, r12
 16a:	0e 94 b5 01 	call	0x36a	; 0x36a <__cmpsf2>
 16e:	88 23       	and	r24, r24
 170:	1c f4       	brge	.+6      	; 0x178 <main+0xce>
		{
			OCR0A = 255;
 172:	c7 bd       	out	0x27, r28	; 39
			OCR0B = 0;
 174:	18 bc       	out	0x28, r1	; 40
 176:	c4 cf       	rjmp	.-120    	; 0x100 <main+0x56>
		}
		else //purple
		{
			OCR0A = 100;
 178:	b7 bc       	out	0x27, r11	; 39
			OCR0B = 100;
 17a:	b8 bc       	out	0x28, r11	; 40
 17c:	c1 cf       	rjmp	.-126    	; 0x100 <main+0x56>

0000017e <__vector_13>:
	
	//startConversion();
}

ISR(TIMER1_OVF_vect)
{
 17e:	1f 92       	push	r1
 180:	0f 92       	push	r0
 182:	0f b6       	in	r0, 0x3f	; 63
 184:	0f 92       	push	r0
 186:	11 24       	eor	r1, r1
 188:	8f 93       	push	r24
	//pm2.5
	TCNT1L = 100;
 18a:	84 e6       	ldi	r24, 0x64	; 100
 18c:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
}
 190:	8f 91       	pop	r24
 192:	0f 90       	pop	r0
 194:	0f be       	out	0x3f, r0	; 63
 196:	0f 90       	pop	r0
 198:	1f 90       	pop	r1
 19a:	18 95       	reti

0000019c <__vector_9>:

ISR(TIMER2_OVF_vect)
{
 19c:	1f 92       	push	r1
 19e:	0f 92       	push	r0
 1a0:	0f b6       	in	r0, 0x3f	; 63
 1a2:	0f 92       	push	r0
 1a4:	11 24       	eor	r1, r1
 1a6:	2f 93       	push	r18
 1a8:	3f 93       	push	r19
 1aa:	4f 93       	push	r20
 1ac:	5f 93       	push	r21
 1ae:	6f 93       	push	r22
 1b0:	7f 93       	push	r23
 1b2:	8f 93       	push	r24
 1b4:	9f 93       	push	r25
 1b6:	af 93       	push	r26
 1b8:	bf 93       	push	r27
 1ba:	ef 93       	push	r30
 1bc:	ff 93       	push	r31
	//pwm
	OCR2A = dutyCycle / 13.42 + 13;
 1be:	22 e5       	ldi	r18, 0x52	; 82
 1c0:	38 eb       	ldi	r19, 0xB8	; 184
 1c2:	46 e5       	ldi	r20, 0x56	; 86
 1c4:	51 e4       	ldi	r21, 0x41	; 65
 1c6:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 1ca:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
 1ce:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
 1d2:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
 1d6:	0e 94 ba 01 	call	0x374	; 0x374 <__divsf3>
 1da:	20 e0       	ldi	r18, 0x00	; 0
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	40 e5       	ldi	r20, 0x50	; 80
 1e0:	51 e4       	ldi	r21, 0x41	; 65
 1e2:	0e 94 49 01 	call	0x292	; 0x292 <__addsf3>
 1e6:	0e 94 2c 02 	call	0x458	; 0x458 <__fixunssfsi>
 1ea:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
}
 1ee:	ff 91       	pop	r31
 1f0:	ef 91       	pop	r30
 1f2:	bf 91       	pop	r27
 1f4:	af 91       	pop	r26
 1f6:	9f 91       	pop	r25
 1f8:	8f 91       	pop	r24
 1fa:	7f 91       	pop	r23
 1fc:	6f 91       	pop	r22
 1fe:	5f 91       	pop	r21
 200:	4f 91       	pop	r20
 202:	3f 91       	pop	r19
 204:	2f 91       	pop	r18
 206:	0f 90       	pop	r0
 208:	0f be       	out	0x3f, r0	; 63
 20a:	0f 90       	pop	r0
 20c:	1f 90       	pop	r1
 20e:	18 95       	reti

00000210 <__vector_21>:

ISR(ADC_vect)
{
 210:	1f 92       	push	r1
 212:	0f 92       	push	r0
 214:	0f b6       	in	r0, 0x3f	; 63
 216:	0f 92       	push	r0
 218:	11 24       	eor	r1, r1
 21a:	2f 93       	push	r18
 21c:	3f 93       	push	r19
 21e:	4f 93       	push	r20
 220:	5f 93       	push	r21
 222:	6f 93       	push	r22
 224:	7f 93       	push	r23
 226:	8f 93       	push	r24
 228:	9f 93       	push	r25
 22a:	af 93       	push	r26
 22c:	bf 93       	push	r27
 22e:	ef 93       	push	r30
 230:	ff 93       	push	r31
	dutyCycle = ADC/4;
 232:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 236:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 23a:	76 95       	lsr	r23
 23c:	67 95       	ror	r22
 23e:	76 95       	lsr	r23
 240:	67 95       	ror	r22
 242:	80 e0       	ldi	r24, 0x00	; 0
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <__floatunsisf>
 24a:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
 24e:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
 252:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_edata+0x2>
 256:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_edata+0x3>
}
 25a:	ff 91       	pop	r31
 25c:	ef 91       	pop	r30
 25e:	bf 91       	pop	r27
 260:	af 91       	pop	r26
 262:	9f 91       	pop	r25
 264:	8f 91       	pop	r24
 266:	7f 91       	pop	r23
 268:	6f 91       	pop	r22
 26a:	5f 91       	pop	r21
 26c:	4f 91       	pop	r20
 26e:	3f 91       	pop	r19
 270:	2f 91       	pop	r18
 272:	0f 90       	pop	r0
 274:	0f be       	out	0x3f, r0	; 63
 276:	0f 90       	pop	r0
 278:	1f 90       	pop	r1
 27a:	18 95       	reti

0000027c <__vector_16>:
ISR(TIMER0_OVF_vect)
{
 27c:	1f 92       	push	r1
 27e:	0f 92       	push	r0
 280:	0f b6       	in	r0, 0x3f	; 63
 282:	0f 92       	push	r0
 284:	11 24       	eor	r1, r1
	
}
 286:	0f 90       	pop	r0
 288:	0f be       	out	0x3f, r0	; 63
 28a:	0f 90       	pop	r0
 28c:	1f 90       	pop	r1
 28e:	18 95       	reti

00000290 <__subsf3>:
 290:	50 58       	subi	r21, 0x80	; 128

00000292 <__addsf3>:
 292:	bb 27       	eor	r27, r27
 294:	aa 27       	eor	r26, r26
 296:	0e 94 60 01 	call	0x2c0	; 0x2c0 <__addsf3x>
 29a:	0c 94 d3 02 	jmp	0x5a6	; 0x5a6 <__fp_round>
 29e:	0e 94 c5 02 	call	0x58a	; 0x58a <__fp_pscA>
 2a2:	38 f0       	brcs	.+14     	; 0x2b2 <__addsf3+0x20>
 2a4:	0e 94 cc 02 	call	0x598	; 0x598 <__fp_pscB>
 2a8:	20 f0       	brcs	.+8      	; 0x2b2 <__addsf3+0x20>
 2aa:	39 f4       	brne	.+14     	; 0x2ba <__addsf3+0x28>
 2ac:	9f 3f       	cpi	r25, 0xFF	; 255
 2ae:	19 f4       	brne	.+6      	; 0x2b6 <__addsf3+0x24>
 2b0:	26 f4       	brtc	.+8      	; 0x2ba <__addsf3+0x28>
 2b2:	0c 94 c2 02 	jmp	0x584	; 0x584 <__fp_nan>
 2b6:	0e f4       	brtc	.+2      	; 0x2ba <__addsf3+0x28>
 2b8:	e0 95       	com	r30
 2ba:	e7 fb       	bst	r30, 7
 2bc:	0c 94 bc 02 	jmp	0x578	; 0x578 <__fp_inf>

000002c0 <__addsf3x>:
 2c0:	e9 2f       	mov	r30, r25
 2c2:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <__fp_split3>
 2c6:	58 f3       	brcs	.-42     	; 0x29e <__addsf3+0xc>
 2c8:	ba 17       	cp	r27, r26
 2ca:	62 07       	cpc	r22, r18
 2cc:	73 07       	cpc	r23, r19
 2ce:	84 07       	cpc	r24, r20
 2d0:	95 07       	cpc	r25, r21
 2d2:	20 f0       	brcs	.+8      	; 0x2dc <__addsf3x+0x1c>
 2d4:	79 f4       	brne	.+30     	; 0x2f4 <__addsf3x+0x34>
 2d6:	a6 f5       	brtc	.+104    	; 0x340 <__addsf3x+0x80>
 2d8:	0c 94 06 03 	jmp	0x60c	; 0x60c <__fp_zero>
 2dc:	0e f4       	brtc	.+2      	; 0x2e0 <__addsf3x+0x20>
 2de:	e0 95       	com	r30
 2e0:	0b 2e       	mov	r0, r27
 2e2:	ba 2f       	mov	r27, r26
 2e4:	a0 2d       	mov	r26, r0
 2e6:	0b 01       	movw	r0, r22
 2e8:	b9 01       	movw	r22, r18
 2ea:	90 01       	movw	r18, r0
 2ec:	0c 01       	movw	r0, r24
 2ee:	ca 01       	movw	r24, r20
 2f0:	a0 01       	movw	r20, r0
 2f2:	11 24       	eor	r1, r1
 2f4:	ff 27       	eor	r31, r31
 2f6:	59 1b       	sub	r21, r25
 2f8:	99 f0       	breq	.+38     	; 0x320 <__addsf3x+0x60>
 2fa:	59 3f       	cpi	r21, 0xF9	; 249
 2fc:	50 f4       	brcc	.+20     	; 0x312 <__addsf3x+0x52>
 2fe:	50 3e       	cpi	r21, 0xE0	; 224
 300:	68 f1       	brcs	.+90     	; 0x35c <__addsf3x+0x9c>
 302:	1a 16       	cp	r1, r26
 304:	f0 40       	sbci	r31, 0x00	; 0
 306:	a2 2f       	mov	r26, r18
 308:	23 2f       	mov	r18, r19
 30a:	34 2f       	mov	r19, r20
 30c:	44 27       	eor	r20, r20
 30e:	58 5f       	subi	r21, 0xF8	; 248
 310:	f3 cf       	rjmp	.-26     	; 0x2f8 <__addsf3x+0x38>
 312:	46 95       	lsr	r20
 314:	37 95       	ror	r19
 316:	27 95       	ror	r18
 318:	a7 95       	ror	r26
 31a:	f0 40       	sbci	r31, 0x00	; 0
 31c:	53 95       	inc	r21
 31e:	c9 f7       	brne	.-14     	; 0x312 <__addsf3x+0x52>
 320:	7e f4       	brtc	.+30     	; 0x340 <__addsf3x+0x80>
 322:	1f 16       	cp	r1, r31
 324:	ba 0b       	sbc	r27, r26
 326:	62 0b       	sbc	r22, r18
 328:	73 0b       	sbc	r23, r19
 32a:	84 0b       	sbc	r24, r20
 32c:	ba f0       	brmi	.+46     	; 0x35c <__addsf3x+0x9c>
 32e:	91 50       	subi	r25, 0x01	; 1
 330:	a1 f0       	breq	.+40     	; 0x35a <__addsf3x+0x9a>
 332:	ff 0f       	add	r31, r31
 334:	bb 1f       	adc	r27, r27
 336:	66 1f       	adc	r22, r22
 338:	77 1f       	adc	r23, r23
 33a:	88 1f       	adc	r24, r24
 33c:	c2 f7       	brpl	.-16     	; 0x32e <__addsf3x+0x6e>
 33e:	0e c0       	rjmp	.+28     	; 0x35c <__addsf3x+0x9c>
 340:	ba 0f       	add	r27, r26
 342:	62 1f       	adc	r22, r18
 344:	73 1f       	adc	r23, r19
 346:	84 1f       	adc	r24, r20
 348:	48 f4       	brcc	.+18     	; 0x35c <__addsf3x+0x9c>
 34a:	87 95       	ror	r24
 34c:	77 95       	ror	r23
 34e:	67 95       	ror	r22
 350:	b7 95       	ror	r27
 352:	f7 95       	ror	r31
 354:	9e 3f       	cpi	r25, 0xFE	; 254
 356:	08 f0       	brcs	.+2      	; 0x35a <__addsf3x+0x9a>
 358:	b0 cf       	rjmp	.-160    	; 0x2ba <__addsf3+0x28>
 35a:	93 95       	inc	r25
 35c:	88 0f       	add	r24, r24
 35e:	08 f0       	brcs	.+2      	; 0x362 <__addsf3x+0xa2>
 360:	99 27       	eor	r25, r25
 362:	ee 0f       	add	r30, r30
 364:	97 95       	ror	r25
 366:	87 95       	ror	r24
 368:	08 95       	ret

0000036a <__cmpsf2>:
 36a:	0e 94 98 02 	call	0x530	; 0x530 <__fp_cmp>
 36e:	08 f4       	brcc	.+2      	; 0x372 <__cmpsf2+0x8>
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	08 95       	ret

00000374 <__divsf3>:
 374:	0e 94 ce 01 	call	0x39c	; 0x39c <__divsf3x>
 378:	0c 94 d3 02 	jmp	0x5a6	; 0x5a6 <__fp_round>
 37c:	0e 94 cc 02 	call	0x598	; 0x598 <__fp_pscB>
 380:	58 f0       	brcs	.+22     	; 0x398 <__divsf3+0x24>
 382:	0e 94 c5 02 	call	0x58a	; 0x58a <__fp_pscA>
 386:	40 f0       	brcs	.+16     	; 0x398 <__divsf3+0x24>
 388:	29 f4       	brne	.+10     	; 0x394 <__divsf3+0x20>
 38a:	5f 3f       	cpi	r21, 0xFF	; 255
 38c:	29 f0       	breq	.+10     	; 0x398 <__divsf3+0x24>
 38e:	0c 94 bc 02 	jmp	0x578	; 0x578 <__fp_inf>
 392:	51 11       	cpse	r21, r1
 394:	0c 94 07 03 	jmp	0x60e	; 0x60e <__fp_szero>
 398:	0c 94 c2 02 	jmp	0x584	; 0x584 <__fp_nan>

0000039c <__divsf3x>:
 39c:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <__fp_split3>
 3a0:	68 f3       	brcs	.-38     	; 0x37c <__divsf3+0x8>

000003a2 <__divsf3_pse>:
 3a2:	99 23       	and	r25, r25
 3a4:	b1 f3       	breq	.-20     	; 0x392 <__divsf3+0x1e>
 3a6:	55 23       	and	r21, r21
 3a8:	91 f3       	breq	.-28     	; 0x38e <__divsf3+0x1a>
 3aa:	95 1b       	sub	r25, r21
 3ac:	55 0b       	sbc	r21, r21
 3ae:	bb 27       	eor	r27, r27
 3b0:	aa 27       	eor	r26, r26
 3b2:	62 17       	cp	r22, r18
 3b4:	73 07       	cpc	r23, r19
 3b6:	84 07       	cpc	r24, r20
 3b8:	38 f0       	brcs	.+14     	; 0x3c8 <__divsf3_pse+0x26>
 3ba:	9f 5f       	subi	r25, 0xFF	; 255
 3bc:	5f 4f       	sbci	r21, 0xFF	; 255
 3be:	22 0f       	add	r18, r18
 3c0:	33 1f       	adc	r19, r19
 3c2:	44 1f       	adc	r20, r20
 3c4:	aa 1f       	adc	r26, r26
 3c6:	a9 f3       	breq	.-22     	; 0x3b2 <__divsf3_pse+0x10>
 3c8:	35 d0       	rcall	.+106    	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 3ca:	0e 2e       	mov	r0, r30
 3cc:	3a f0       	brmi	.+14     	; 0x3dc <__divsf3_pse+0x3a>
 3ce:	e0 e8       	ldi	r30, 0x80	; 128
 3d0:	32 d0       	rcall	.+100    	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 3d2:	91 50       	subi	r25, 0x01	; 1
 3d4:	50 40       	sbci	r21, 0x00	; 0
 3d6:	e6 95       	lsr	r30
 3d8:	00 1c       	adc	r0, r0
 3da:	ca f7       	brpl	.-14     	; 0x3ce <__divsf3_pse+0x2c>
 3dc:	2b d0       	rcall	.+86     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 3de:	fe 2f       	mov	r31, r30
 3e0:	29 d0       	rcall	.+82     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 3e2:	66 0f       	add	r22, r22
 3e4:	77 1f       	adc	r23, r23
 3e6:	88 1f       	adc	r24, r24
 3e8:	bb 1f       	adc	r27, r27
 3ea:	26 17       	cp	r18, r22
 3ec:	37 07       	cpc	r19, r23
 3ee:	48 07       	cpc	r20, r24
 3f0:	ab 07       	cpc	r26, r27
 3f2:	b0 e8       	ldi	r27, 0x80	; 128
 3f4:	09 f0       	breq	.+2      	; 0x3f8 <__divsf3_pse+0x56>
 3f6:	bb 0b       	sbc	r27, r27
 3f8:	80 2d       	mov	r24, r0
 3fa:	bf 01       	movw	r22, r30
 3fc:	ff 27       	eor	r31, r31
 3fe:	93 58       	subi	r25, 0x83	; 131
 400:	5f 4f       	sbci	r21, 0xFF	; 255
 402:	3a f0       	brmi	.+14     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 404:	9e 3f       	cpi	r25, 0xFE	; 254
 406:	51 05       	cpc	r21, r1
 408:	78 f0       	brcs	.+30     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 40a:	0c 94 bc 02 	jmp	0x578	; 0x578 <__fp_inf>
 40e:	0c 94 07 03 	jmp	0x60e	; 0x60e <__fp_szero>
 412:	5f 3f       	cpi	r21, 0xFF	; 255
 414:	e4 f3       	brlt	.-8      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 416:	98 3e       	cpi	r25, 0xE8	; 232
 418:	d4 f3       	brlt	.-12     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 41a:	86 95       	lsr	r24
 41c:	77 95       	ror	r23
 41e:	67 95       	ror	r22
 420:	b7 95       	ror	r27
 422:	f7 95       	ror	r31
 424:	9f 5f       	subi	r25, 0xFF	; 255
 426:	c9 f7       	brne	.-14     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 428:	88 0f       	add	r24, r24
 42a:	91 1d       	adc	r25, r1
 42c:	96 95       	lsr	r25
 42e:	87 95       	ror	r24
 430:	97 f9       	bld	r25, 7
 432:	08 95       	ret
 434:	e1 e0       	ldi	r30, 0x01	; 1
 436:	66 0f       	add	r22, r22
 438:	77 1f       	adc	r23, r23
 43a:	88 1f       	adc	r24, r24
 43c:	bb 1f       	adc	r27, r27
 43e:	62 17       	cp	r22, r18
 440:	73 07       	cpc	r23, r19
 442:	84 07       	cpc	r24, r20
 444:	ba 07       	cpc	r27, r26
 446:	20 f0       	brcs	.+8      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 448:	62 1b       	sub	r22, r18
 44a:	73 0b       	sbc	r23, r19
 44c:	84 0b       	sbc	r24, r20
 44e:	ba 0b       	sbc	r27, r26
 450:	ee 1f       	adc	r30, r30
 452:	88 f7       	brcc	.-30     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 454:	e0 95       	com	r30
 456:	08 95       	ret

00000458 <__fixunssfsi>:
 458:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <__fp_splitA>
 45c:	88 f0       	brcs	.+34     	; 0x480 <__fixunssfsi+0x28>
 45e:	9f 57       	subi	r25, 0x7F	; 127
 460:	98 f0       	brcs	.+38     	; 0x488 <__fixunssfsi+0x30>
 462:	b9 2f       	mov	r27, r25
 464:	99 27       	eor	r25, r25
 466:	b7 51       	subi	r27, 0x17	; 23
 468:	b0 f0       	brcs	.+44     	; 0x496 <__fixunssfsi+0x3e>
 46a:	e1 f0       	breq	.+56     	; 0x4a4 <__fixunssfsi+0x4c>
 46c:	66 0f       	add	r22, r22
 46e:	77 1f       	adc	r23, r23
 470:	88 1f       	adc	r24, r24
 472:	99 1f       	adc	r25, r25
 474:	1a f0       	brmi	.+6      	; 0x47c <__fixunssfsi+0x24>
 476:	ba 95       	dec	r27
 478:	c9 f7       	brne	.-14     	; 0x46c <__fixunssfsi+0x14>
 47a:	14 c0       	rjmp	.+40     	; 0x4a4 <__fixunssfsi+0x4c>
 47c:	b1 30       	cpi	r27, 0x01	; 1
 47e:	91 f0       	breq	.+36     	; 0x4a4 <__fixunssfsi+0x4c>
 480:	0e 94 06 03 	call	0x60c	; 0x60c <__fp_zero>
 484:	b1 e0       	ldi	r27, 0x01	; 1
 486:	08 95       	ret
 488:	0c 94 06 03 	jmp	0x60c	; 0x60c <__fp_zero>
 48c:	67 2f       	mov	r22, r23
 48e:	78 2f       	mov	r23, r24
 490:	88 27       	eor	r24, r24
 492:	b8 5f       	subi	r27, 0xF8	; 248
 494:	39 f0       	breq	.+14     	; 0x4a4 <__fixunssfsi+0x4c>
 496:	b9 3f       	cpi	r27, 0xF9	; 249
 498:	cc f3       	brlt	.-14     	; 0x48c <__fixunssfsi+0x34>
 49a:	86 95       	lsr	r24
 49c:	77 95       	ror	r23
 49e:	67 95       	ror	r22
 4a0:	b3 95       	inc	r27
 4a2:	d9 f7       	brne	.-10     	; 0x49a <__fixunssfsi+0x42>
 4a4:	3e f4       	brtc	.+14     	; 0x4b4 <__fixunssfsi+0x5c>
 4a6:	90 95       	com	r25
 4a8:	80 95       	com	r24
 4aa:	70 95       	com	r23
 4ac:	61 95       	neg	r22
 4ae:	7f 4f       	sbci	r23, 0xFF	; 255
 4b0:	8f 4f       	sbci	r24, 0xFF	; 255
 4b2:	9f 4f       	sbci	r25, 0xFF	; 255
 4b4:	08 95       	ret

000004b6 <__floatunsisf>:
 4b6:	e8 94       	clt
 4b8:	09 c0       	rjmp	.+18     	; 0x4cc <__floatsisf+0x12>

000004ba <__floatsisf>:
 4ba:	97 fb       	bst	r25, 7
 4bc:	3e f4       	brtc	.+14     	; 0x4cc <__floatsisf+0x12>
 4be:	90 95       	com	r25
 4c0:	80 95       	com	r24
 4c2:	70 95       	com	r23
 4c4:	61 95       	neg	r22
 4c6:	7f 4f       	sbci	r23, 0xFF	; 255
 4c8:	8f 4f       	sbci	r24, 0xFF	; 255
 4ca:	9f 4f       	sbci	r25, 0xFF	; 255
 4cc:	99 23       	and	r25, r25
 4ce:	a9 f0       	breq	.+42     	; 0x4fa <__floatsisf+0x40>
 4d0:	f9 2f       	mov	r31, r25
 4d2:	96 e9       	ldi	r25, 0x96	; 150
 4d4:	bb 27       	eor	r27, r27
 4d6:	93 95       	inc	r25
 4d8:	f6 95       	lsr	r31
 4da:	87 95       	ror	r24
 4dc:	77 95       	ror	r23
 4de:	67 95       	ror	r22
 4e0:	b7 95       	ror	r27
 4e2:	f1 11       	cpse	r31, r1
 4e4:	f8 cf       	rjmp	.-16     	; 0x4d6 <__floatsisf+0x1c>
 4e6:	fa f4       	brpl	.+62     	; 0x526 <__floatsisf+0x6c>
 4e8:	bb 0f       	add	r27, r27
 4ea:	11 f4       	brne	.+4      	; 0x4f0 <__floatsisf+0x36>
 4ec:	60 ff       	sbrs	r22, 0
 4ee:	1b c0       	rjmp	.+54     	; 0x526 <__floatsisf+0x6c>
 4f0:	6f 5f       	subi	r22, 0xFF	; 255
 4f2:	7f 4f       	sbci	r23, 0xFF	; 255
 4f4:	8f 4f       	sbci	r24, 0xFF	; 255
 4f6:	9f 4f       	sbci	r25, 0xFF	; 255
 4f8:	16 c0       	rjmp	.+44     	; 0x526 <__floatsisf+0x6c>
 4fa:	88 23       	and	r24, r24
 4fc:	11 f0       	breq	.+4      	; 0x502 <__floatsisf+0x48>
 4fe:	96 e9       	ldi	r25, 0x96	; 150
 500:	11 c0       	rjmp	.+34     	; 0x524 <__floatsisf+0x6a>
 502:	77 23       	and	r23, r23
 504:	21 f0       	breq	.+8      	; 0x50e <__floatsisf+0x54>
 506:	9e e8       	ldi	r25, 0x8E	; 142
 508:	87 2f       	mov	r24, r23
 50a:	76 2f       	mov	r23, r22
 50c:	05 c0       	rjmp	.+10     	; 0x518 <__floatsisf+0x5e>
 50e:	66 23       	and	r22, r22
 510:	71 f0       	breq	.+28     	; 0x52e <__floatsisf+0x74>
 512:	96 e8       	ldi	r25, 0x86	; 134
 514:	86 2f       	mov	r24, r22
 516:	70 e0       	ldi	r23, 0x00	; 0
 518:	60 e0       	ldi	r22, 0x00	; 0
 51a:	2a f0       	brmi	.+10     	; 0x526 <__floatsisf+0x6c>
 51c:	9a 95       	dec	r25
 51e:	66 0f       	add	r22, r22
 520:	77 1f       	adc	r23, r23
 522:	88 1f       	adc	r24, r24
 524:	da f7       	brpl	.-10     	; 0x51c <__floatsisf+0x62>
 526:	88 0f       	add	r24, r24
 528:	96 95       	lsr	r25
 52a:	87 95       	ror	r24
 52c:	97 f9       	bld	r25, 7
 52e:	08 95       	ret

00000530 <__fp_cmp>:
 530:	99 0f       	add	r25, r25
 532:	00 08       	sbc	r0, r0
 534:	55 0f       	add	r21, r21
 536:	aa 0b       	sbc	r26, r26
 538:	e0 e8       	ldi	r30, 0x80	; 128
 53a:	fe ef       	ldi	r31, 0xFE	; 254
 53c:	16 16       	cp	r1, r22
 53e:	17 06       	cpc	r1, r23
 540:	e8 07       	cpc	r30, r24
 542:	f9 07       	cpc	r31, r25
 544:	c0 f0       	brcs	.+48     	; 0x576 <__fp_cmp+0x46>
 546:	12 16       	cp	r1, r18
 548:	13 06       	cpc	r1, r19
 54a:	e4 07       	cpc	r30, r20
 54c:	f5 07       	cpc	r31, r21
 54e:	98 f0       	brcs	.+38     	; 0x576 <__fp_cmp+0x46>
 550:	62 1b       	sub	r22, r18
 552:	73 0b       	sbc	r23, r19
 554:	84 0b       	sbc	r24, r20
 556:	95 0b       	sbc	r25, r21
 558:	39 f4       	brne	.+14     	; 0x568 <__fp_cmp+0x38>
 55a:	0a 26       	eor	r0, r26
 55c:	61 f0       	breq	.+24     	; 0x576 <__fp_cmp+0x46>
 55e:	23 2b       	or	r18, r19
 560:	24 2b       	or	r18, r20
 562:	25 2b       	or	r18, r21
 564:	21 f4       	brne	.+8      	; 0x56e <__fp_cmp+0x3e>
 566:	08 95       	ret
 568:	0a 26       	eor	r0, r26
 56a:	09 f4       	brne	.+2      	; 0x56e <__fp_cmp+0x3e>
 56c:	a1 40       	sbci	r26, 0x01	; 1
 56e:	a6 95       	lsr	r26
 570:	8f ef       	ldi	r24, 0xFF	; 255
 572:	81 1d       	adc	r24, r1
 574:	81 1d       	adc	r24, r1
 576:	08 95       	ret

00000578 <__fp_inf>:
 578:	97 f9       	bld	r25, 7
 57a:	9f 67       	ori	r25, 0x7F	; 127
 57c:	80 e8       	ldi	r24, 0x80	; 128
 57e:	70 e0       	ldi	r23, 0x00	; 0
 580:	60 e0       	ldi	r22, 0x00	; 0
 582:	08 95       	ret

00000584 <__fp_nan>:
 584:	9f ef       	ldi	r25, 0xFF	; 255
 586:	80 ec       	ldi	r24, 0xC0	; 192
 588:	08 95       	ret

0000058a <__fp_pscA>:
 58a:	00 24       	eor	r0, r0
 58c:	0a 94       	dec	r0
 58e:	16 16       	cp	r1, r22
 590:	17 06       	cpc	r1, r23
 592:	18 06       	cpc	r1, r24
 594:	09 06       	cpc	r0, r25
 596:	08 95       	ret

00000598 <__fp_pscB>:
 598:	00 24       	eor	r0, r0
 59a:	0a 94       	dec	r0
 59c:	12 16       	cp	r1, r18
 59e:	13 06       	cpc	r1, r19
 5a0:	14 06       	cpc	r1, r20
 5a2:	05 06       	cpc	r0, r21
 5a4:	08 95       	ret

000005a6 <__fp_round>:
 5a6:	09 2e       	mov	r0, r25
 5a8:	03 94       	inc	r0
 5aa:	00 0c       	add	r0, r0
 5ac:	11 f4       	brne	.+4      	; 0x5b2 <__fp_round+0xc>
 5ae:	88 23       	and	r24, r24
 5b0:	52 f0       	brmi	.+20     	; 0x5c6 <__fp_round+0x20>
 5b2:	bb 0f       	add	r27, r27
 5b4:	40 f4       	brcc	.+16     	; 0x5c6 <__fp_round+0x20>
 5b6:	bf 2b       	or	r27, r31
 5b8:	11 f4       	brne	.+4      	; 0x5be <__fp_round+0x18>
 5ba:	60 ff       	sbrs	r22, 0
 5bc:	04 c0       	rjmp	.+8      	; 0x5c6 <__fp_round+0x20>
 5be:	6f 5f       	subi	r22, 0xFF	; 255
 5c0:	7f 4f       	sbci	r23, 0xFF	; 255
 5c2:	8f 4f       	sbci	r24, 0xFF	; 255
 5c4:	9f 4f       	sbci	r25, 0xFF	; 255
 5c6:	08 95       	ret

000005c8 <__fp_split3>:
 5c8:	57 fd       	sbrc	r21, 7
 5ca:	90 58       	subi	r25, 0x80	; 128
 5cc:	44 0f       	add	r20, r20
 5ce:	55 1f       	adc	r21, r21
 5d0:	59 f0       	breq	.+22     	; 0x5e8 <__fp_splitA+0x10>
 5d2:	5f 3f       	cpi	r21, 0xFF	; 255
 5d4:	71 f0       	breq	.+28     	; 0x5f2 <__fp_splitA+0x1a>
 5d6:	47 95       	ror	r20

000005d8 <__fp_splitA>:
 5d8:	88 0f       	add	r24, r24
 5da:	97 fb       	bst	r25, 7
 5dc:	99 1f       	adc	r25, r25
 5de:	61 f0       	breq	.+24     	; 0x5f8 <__fp_splitA+0x20>
 5e0:	9f 3f       	cpi	r25, 0xFF	; 255
 5e2:	79 f0       	breq	.+30     	; 0x602 <__fp_splitA+0x2a>
 5e4:	87 95       	ror	r24
 5e6:	08 95       	ret
 5e8:	12 16       	cp	r1, r18
 5ea:	13 06       	cpc	r1, r19
 5ec:	14 06       	cpc	r1, r20
 5ee:	55 1f       	adc	r21, r21
 5f0:	f2 cf       	rjmp	.-28     	; 0x5d6 <__fp_split3+0xe>
 5f2:	46 95       	lsr	r20
 5f4:	f1 df       	rcall	.-30     	; 0x5d8 <__fp_splitA>
 5f6:	08 c0       	rjmp	.+16     	; 0x608 <__fp_splitA+0x30>
 5f8:	16 16       	cp	r1, r22
 5fa:	17 06       	cpc	r1, r23
 5fc:	18 06       	cpc	r1, r24
 5fe:	99 1f       	adc	r25, r25
 600:	f1 cf       	rjmp	.-30     	; 0x5e4 <__fp_splitA+0xc>
 602:	86 95       	lsr	r24
 604:	71 05       	cpc	r23, r1
 606:	61 05       	cpc	r22, r1
 608:	08 94       	sec
 60a:	08 95       	ret

0000060c <__fp_zero>:
 60c:	e8 94       	clt

0000060e <__fp_szero>:
 60e:	bb 27       	eor	r27, r27
 610:	66 27       	eor	r22, r22
 612:	77 27       	eor	r23, r23
 614:	cb 01       	movw	r24, r22
 616:	97 f9       	bld	r25, 7
 618:	08 95       	ret

0000061a <_exit>:
 61a:	f8 94       	cli

0000061c <__stop_program>:
 61c:	ff cf       	rjmp	.-2      	; 0x61c <__stop_program>
