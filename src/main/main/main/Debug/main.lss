
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000069e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000062a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  0000069e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000069e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000710  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000760  00000000  00000000  00000758  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000685  00000000  00000000  00000eb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000032b  00000000  00000000  0000153d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000120  00000000  00000000  00001868  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000038b  00000000  00000000  00001988  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000201  00000000  00000000  00001d13  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00001f14  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__vector_9>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__vector_13>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 44 01 	jmp	0x288	; 0x288 <__vector_16>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__vector_21>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a4 30       	cpi	r26, 0x04	; 4
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 55 00 	call	0xaa	; 0xaa <main>
  88:	0c 94 13 03 	jmp	0x626	; 0x626 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <setupADC>:
    }
}
void setupADC()
{
	
	ADMUX = (1 << REFS0) | (1 << MUX0) | (1 << MUX1);
  90:	83 e4       	ldi	r24, 0x43	; 67
  92:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA = 0xaf;
  96:	8f ea       	ldi	r24, 0xAF	; 175
  98:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	//ADCSRA = (1 << ADEN) | (1 << ADIE) | (1 << ADPS0) | (1 << ADPS1) | (1 << ADPS2) | (1 << ADATE);
	ADCSRB = (1 << ADTS2) | (1 << ADTS1);
  9c:	86 e0       	ldi	r24, 0x06	; 6
  9e:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
	DIDR0 = (1 << ADC3D);
  a2:	88 e0       	ldi	r24, 0x08	; 8
  a4:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
  a8:	08 95       	ret

000000aa <main>:


int main(void)
{	
	
	DDRD = (1 << PORTD6) | (1 << PORTD5) | (1 << PORTD3) | (1 << PORTD4) | (1 << PORTD7);
  aa:	88 ef       	ldi	r24, 0xF8	; 248
  ac:	8a b9       	out	0x0a, r24	; 10
	DDRB = (1 << PORTB3) | (1 << PORTB0) | (1 << PORTB1);
  ae:	8b e0       	ldi	r24, 0x0B	; 11
  b0:	84 b9       	out	0x04, r24	; 4
		
	
	
	//計數器0為三色LED控制、1為pm2.5的脈波訊號、2為馬達的控制
	TCCR0A = (1 << COM0A1) | (1 << WGM00) | (1 << WGM01);
  b2:	83 e8       	ldi	r24, 0x83	; 131
  b4:	84 bd       	out	0x24, r24	; 36
	TCCR1A = (1 << COM1A1) | (1 << WGM10);
  b6:	81 e8       	ldi	r24, 0x81	; 129
  b8:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR2A = (1 << COM2A1) | (1 << COM2B1) | (1 << WGM20) | (1 << WGM21);
  bc:	83 ea       	ldi	r24, 0xA3	; 163
  be:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
	TIMSK0 = (1 << TOIE0);
  c2:	c1 e0       	ldi	r28, 0x01	; 1
  c4:	c0 93 6e 00 	sts	0x006E, r28	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	TIMSK1 = (1 << TOIE1);
  c8:	c0 93 6f 00 	sts	0x006F, r28	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	TIMSK2 = (1 << TOIE2);
  cc:	c0 93 70 00 	sts	0x0070, r28	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
	
	setupADC();
  d0:	0e 94 48 00 	call	0x90	; 0x90 <setupADC>
	
	sei();
  d4:	78 94       	sei
	
	TCCR0B = (1 << CS00);
  d6:	c5 bd       	out	0x25, r28	; 37
	TCCR1B = (1 << CS10) | (1 << CS12) | (1 << WGM12);
  d8:	8d e0       	ldi	r24, 0x0D	; 13
  da:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	TCCR2B = (1 << CS20) | (1 << CS21) | (1 << CS22);
  de:	87 e0       	ldi	r24, 0x07	; 7
  e0:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>

	OCR1A = 104;
  e4:	88 e6       	ldi	r24, 0x68	; 104
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  ec:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
    while(1)
    {
        //TODO:: Please write your application code
		if (dutyCycle < 50 ) //green
  f0:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <_edata>
  f4:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <_edata+0x1>
  f8:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <_edata+0x2>
  fc:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <_edata+0x3>
 100:	20 e0       	ldi	r18, 0x00	; 0
 102:	30 e0       	ldi	r19, 0x00	; 0
 104:	48 e4       	ldi	r20, 0x48	; 72
 106:	52 e4       	ldi	r21, 0x42	; 66
 108:	c7 01       	movw	r24, r14
 10a:	b6 01       	movw	r22, r12
 10c:	0e 94 bb 01 	call	0x376	; 0x376 <__cmpsf2>
 110:	88 23       	and	r24, r24
 112:	3c f4       	brge	.+14     	; 0x122 <main+0x78>
		{
			PORTD &= 0 << PORTD4;
 114:	8b b1       	in	r24, 0x0b	; 11
 116:	1b b8       	out	0x0b, r1	; 11
			PORTD &= 0 << PORTD7;
 118:	8b b1       	in	r24, 0x0b	; 11
 11a:	1b b8       	out	0x0b, r1	; 11
			PORTB &= 0 << PORTB0;
 11c:	85 b1       	in	r24, 0x05	; 5
 11e:	15 b8       	out	0x05, r1	; 5
 120:	e7 cf       	rjmp	.-50     	; 0xf0 <main+0x46>
		}
		else if (dutyCycle < 100 ) //yellow
 122:	20 e0       	ldi	r18, 0x00	; 0
 124:	30 e0       	ldi	r19, 0x00	; 0
 126:	48 ec       	ldi	r20, 0xC8	; 200
 128:	52 e4       	ldi	r21, 0x42	; 66
 12a:	c7 01       	movw	r24, r14
 12c:	b6 01       	movw	r22, r12
 12e:	0e 94 bb 01 	call	0x376	; 0x376 <__cmpsf2>
 132:	88 23       	and	r24, r24
 134:	2c f4       	brge	.+10     	; 0x140 <main+0x96>
		{
			PORTD |= 0x10;
 136:	5c 9a       	sbi	0x0b, 4	; 11
			PORTD &= 0x7f;
 138:	5f 98       	cbi	0x0b, 7	; 11
			PORTB &= 0 << PORTB0;
 13a:	85 b1       	in	r24, 0x05	; 5
 13c:	15 b8       	out	0x05, r1	; 5
 13e:	d8 cf       	rjmp	.-80     	; 0xf0 <main+0x46>
		}
		else if (dutyCycle < 150) //orange
 140:	20 e0       	ldi	r18, 0x00	; 0
 142:	30 e0       	ldi	r19, 0x00	; 0
 144:	46 e1       	ldi	r20, 0x16	; 22
 146:	53 e4       	ldi	r21, 0x43	; 67
 148:	c7 01       	movw	r24, r14
 14a:	b6 01       	movw	r22, r12
 14c:	0e 94 bb 01 	call	0x376	; 0x376 <__cmpsf2>
 150:	88 23       	and	r24, r24
 152:	34 f4       	brge	.+12     	; 0x160 <main+0xb6>
		{
			PORTD &= 0 << PORTD4;
 154:	8b b1       	in	r24, 0x0b	; 11
 156:	1b b8       	out	0x0b, r1	; 11
			PORTD |= 1 << PORTD7;
 158:	5f 9a       	sbi	0x0b, 7	; 11
			PORTB &= 0 << PORTB0;
 15a:	85 b1       	in	r24, 0x05	; 5
 15c:	15 b8       	out	0x05, r1	; 5
 15e:	c8 cf       	rjmp	.-112    	; 0xf0 <main+0x46>
		}
		else if (dutyCycle < 200 ) //red
 160:	20 e0       	ldi	r18, 0x00	; 0
 162:	30 e0       	ldi	r19, 0x00	; 0
 164:	48 e4       	ldi	r20, 0x48	; 72
 166:	53 e4       	ldi	r21, 0x43	; 67
 168:	c7 01       	movw	r24, r14
 16a:	b6 01       	movw	r22, r12
 16c:	0e 94 bb 01 	call	0x376	; 0x376 <__cmpsf2>
 170:	88 23       	and	r24, r24
 172:	2c f4       	brge	.+10     	; 0x17e <main+0xd4>
		{
			PORTD |= 1 << PORTD4;
 174:	5c 9a       	sbi	0x0b, 4	; 11
			PORTD |= 1 << PORTD7;
 176:	5f 9a       	sbi	0x0b, 7	; 11
			PORTB &= 0 << PORTB0;
 178:	85 b1       	in	r24, 0x05	; 5
 17a:	15 b8       	out	0x05, r1	; 5
 17c:	b9 cf       	rjmp	.-142    	; 0xf0 <main+0x46>
		}
		else //purple
		{
			PORTD &= 0 << PORTD4;
 17e:	8b b1       	in	r24, 0x0b	; 11
 180:	1b b8       	out	0x0b, r1	; 11
			PORTD &= 0 << PORTD7;
 182:	8b b1       	in	r24, 0x0b	; 11
 184:	1b b8       	out	0x0b, r1	; 11
			PORTB |= 1 << PORTB0;
 186:	28 9a       	sbi	0x05, 0	; 5
 188:	b3 cf       	rjmp	.-154    	; 0xf0 <main+0x46>

0000018a <__vector_13>:
	
	//startConversion();
}

ISR(TIMER1_OVF_vect)
{
 18a:	1f 92       	push	r1
 18c:	0f 92       	push	r0
 18e:	0f b6       	in	r0, 0x3f	; 63
 190:	0f 92       	push	r0
 192:	11 24       	eor	r1, r1
 194:	8f 93       	push	r24
	//pm2.5
	TCNT1L = 100;
 196:	84 e6       	ldi	r24, 0x64	; 100
 198:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
}
 19c:	8f 91       	pop	r24
 19e:	0f 90       	pop	r0
 1a0:	0f be       	out	0x3f, r0	; 63
 1a2:	0f 90       	pop	r0
 1a4:	1f 90       	pop	r1
 1a6:	18 95       	reti

000001a8 <__vector_9>:

ISR(TIMER2_OVF_vect)
{
 1a8:	1f 92       	push	r1
 1aa:	0f 92       	push	r0
 1ac:	0f b6       	in	r0, 0x3f	; 63
 1ae:	0f 92       	push	r0
 1b0:	11 24       	eor	r1, r1
 1b2:	2f 93       	push	r18
 1b4:	3f 93       	push	r19
 1b6:	4f 93       	push	r20
 1b8:	5f 93       	push	r21
 1ba:	6f 93       	push	r22
 1bc:	7f 93       	push	r23
 1be:	8f 93       	push	r24
 1c0:	9f 93       	push	r25
 1c2:	af 93       	push	r26
 1c4:	bf 93       	push	r27
 1c6:	ef 93       	push	r30
 1c8:	ff 93       	push	r31
	OCR2A = dutyCycle / 13.42 + 13;
 1ca:	22 e5       	ldi	r18, 0x52	; 82
 1cc:	38 eb       	ldi	r19, 0xB8	; 184
 1ce:	46 e5       	ldi	r20, 0x56	; 86
 1d0:	51 e4       	ldi	r21, 0x41	; 65
 1d2:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 1d6:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
 1da:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
 1de:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
 1e2:	0e 94 c0 01 	call	0x380	; 0x380 <__divsf3>
 1e6:	20 e0       	ldi	r18, 0x00	; 0
 1e8:	30 e0       	ldi	r19, 0x00	; 0
 1ea:	40 e5       	ldi	r20, 0x50	; 80
 1ec:	51 e4       	ldi	r21, 0x41	; 65
 1ee:	0e 94 4f 01 	call	0x29e	; 0x29e <__addsf3>
 1f2:	0e 94 32 02 	call	0x464	; 0x464 <__fixunssfsi>
 1f6:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
}
 1fa:	ff 91       	pop	r31
 1fc:	ef 91       	pop	r30
 1fe:	bf 91       	pop	r27
 200:	af 91       	pop	r26
 202:	9f 91       	pop	r25
 204:	8f 91       	pop	r24
 206:	7f 91       	pop	r23
 208:	6f 91       	pop	r22
 20a:	5f 91       	pop	r21
 20c:	4f 91       	pop	r20
 20e:	3f 91       	pop	r19
 210:	2f 91       	pop	r18
 212:	0f 90       	pop	r0
 214:	0f be       	out	0x3f, r0	; 63
 216:	0f 90       	pop	r0
 218:	1f 90       	pop	r1
 21a:	18 95       	reti

0000021c <__vector_21>:

ISR(ADC_vect)
{
 21c:	1f 92       	push	r1
 21e:	0f 92       	push	r0
 220:	0f b6       	in	r0, 0x3f	; 63
 222:	0f 92       	push	r0
 224:	11 24       	eor	r1, r1
 226:	2f 93       	push	r18
 228:	3f 93       	push	r19
 22a:	4f 93       	push	r20
 22c:	5f 93       	push	r21
 22e:	6f 93       	push	r22
 230:	7f 93       	push	r23
 232:	8f 93       	push	r24
 234:	9f 93       	push	r25
 236:	af 93       	push	r26
 238:	bf 93       	push	r27
 23a:	ef 93       	push	r30
 23c:	ff 93       	push	r31
	dutyCycle = ADC/4;
 23e:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 242:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 246:	76 95       	lsr	r23
 248:	67 95       	ror	r22
 24a:	76 95       	lsr	r23
 24c:	67 95       	ror	r22
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	0e 94 61 02 	call	0x4c2	; 0x4c2 <__floatunsisf>
 256:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
 25a:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
 25e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_edata+0x2>
 262:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_edata+0x3>
}
 266:	ff 91       	pop	r31
 268:	ef 91       	pop	r30
 26a:	bf 91       	pop	r27
 26c:	af 91       	pop	r26
 26e:	9f 91       	pop	r25
 270:	8f 91       	pop	r24
 272:	7f 91       	pop	r23
 274:	6f 91       	pop	r22
 276:	5f 91       	pop	r21
 278:	4f 91       	pop	r20
 27a:	3f 91       	pop	r19
 27c:	2f 91       	pop	r18
 27e:	0f 90       	pop	r0
 280:	0f be       	out	0x3f, r0	; 63
 282:	0f 90       	pop	r0
 284:	1f 90       	pop	r1
 286:	18 95       	reti

00000288 <__vector_16>:
ISR(TIMER0_OVF_vect)
{
 288:	1f 92       	push	r1
 28a:	0f 92       	push	r0
 28c:	0f b6       	in	r0, 0x3f	; 63
 28e:	0f 92       	push	r0
 290:	11 24       	eor	r1, r1
	
}
 292:	0f 90       	pop	r0
 294:	0f be       	out	0x3f, r0	; 63
 296:	0f 90       	pop	r0
 298:	1f 90       	pop	r1
 29a:	18 95       	reti

0000029c <__subsf3>:
 29c:	50 58       	subi	r21, 0x80	; 128

0000029e <__addsf3>:
 29e:	bb 27       	eor	r27, r27
 2a0:	aa 27       	eor	r26, r26
 2a2:	0e 94 66 01 	call	0x2cc	; 0x2cc <__addsf3x>
 2a6:	0c 94 d9 02 	jmp	0x5b2	; 0x5b2 <__fp_round>
 2aa:	0e 94 cb 02 	call	0x596	; 0x596 <__fp_pscA>
 2ae:	38 f0       	brcs	.+14     	; 0x2be <__addsf3+0x20>
 2b0:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <__fp_pscB>
 2b4:	20 f0       	brcs	.+8      	; 0x2be <__addsf3+0x20>
 2b6:	39 f4       	brne	.+14     	; 0x2c6 <__addsf3+0x28>
 2b8:	9f 3f       	cpi	r25, 0xFF	; 255
 2ba:	19 f4       	brne	.+6      	; 0x2c2 <__addsf3+0x24>
 2bc:	26 f4       	brtc	.+8      	; 0x2c6 <__addsf3+0x28>
 2be:	0c 94 c8 02 	jmp	0x590	; 0x590 <__fp_nan>
 2c2:	0e f4       	brtc	.+2      	; 0x2c6 <__addsf3+0x28>
 2c4:	e0 95       	com	r30
 2c6:	e7 fb       	bst	r30, 7
 2c8:	0c 94 c2 02 	jmp	0x584	; 0x584 <__fp_inf>

000002cc <__addsf3x>:
 2cc:	e9 2f       	mov	r30, r25
 2ce:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <__fp_split3>
 2d2:	58 f3       	brcs	.-42     	; 0x2aa <__addsf3+0xc>
 2d4:	ba 17       	cp	r27, r26
 2d6:	62 07       	cpc	r22, r18
 2d8:	73 07       	cpc	r23, r19
 2da:	84 07       	cpc	r24, r20
 2dc:	95 07       	cpc	r25, r21
 2de:	20 f0       	brcs	.+8      	; 0x2e8 <__addsf3x+0x1c>
 2e0:	79 f4       	brne	.+30     	; 0x300 <__addsf3x+0x34>
 2e2:	a6 f5       	brtc	.+104    	; 0x34c <__addsf3x+0x80>
 2e4:	0c 94 0c 03 	jmp	0x618	; 0x618 <__fp_zero>
 2e8:	0e f4       	brtc	.+2      	; 0x2ec <__addsf3x+0x20>
 2ea:	e0 95       	com	r30
 2ec:	0b 2e       	mov	r0, r27
 2ee:	ba 2f       	mov	r27, r26
 2f0:	a0 2d       	mov	r26, r0
 2f2:	0b 01       	movw	r0, r22
 2f4:	b9 01       	movw	r22, r18
 2f6:	90 01       	movw	r18, r0
 2f8:	0c 01       	movw	r0, r24
 2fa:	ca 01       	movw	r24, r20
 2fc:	a0 01       	movw	r20, r0
 2fe:	11 24       	eor	r1, r1
 300:	ff 27       	eor	r31, r31
 302:	59 1b       	sub	r21, r25
 304:	99 f0       	breq	.+38     	; 0x32c <__addsf3x+0x60>
 306:	59 3f       	cpi	r21, 0xF9	; 249
 308:	50 f4       	brcc	.+20     	; 0x31e <__addsf3x+0x52>
 30a:	50 3e       	cpi	r21, 0xE0	; 224
 30c:	68 f1       	brcs	.+90     	; 0x368 <__addsf3x+0x9c>
 30e:	1a 16       	cp	r1, r26
 310:	f0 40       	sbci	r31, 0x00	; 0
 312:	a2 2f       	mov	r26, r18
 314:	23 2f       	mov	r18, r19
 316:	34 2f       	mov	r19, r20
 318:	44 27       	eor	r20, r20
 31a:	58 5f       	subi	r21, 0xF8	; 248
 31c:	f3 cf       	rjmp	.-26     	; 0x304 <__addsf3x+0x38>
 31e:	46 95       	lsr	r20
 320:	37 95       	ror	r19
 322:	27 95       	ror	r18
 324:	a7 95       	ror	r26
 326:	f0 40       	sbci	r31, 0x00	; 0
 328:	53 95       	inc	r21
 32a:	c9 f7       	brne	.-14     	; 0x31e <__addsf3x+0x52>
 32c:	7e f4       	brtc	.+30     	; 0x34c <__addsf3x+0x80>
 32e:	1f 16       	cp	r1, r31
 330:	ba 0b       	sbc	r27, r26
 332:	62 0b       	sbc	r22, r18
 334:	73 0b       	sbc	r23, r19
 336:	84 0b       	sbc	r24, r20
 338:	ba f0       	brmi	.+46     	; 0x368 <__addsf3x+0x9c>
 33a:	91 50       	subi	r25, 0x01	; 1
 33c:	a1 f0       	breq	.+40     	; 0x366 <__addsf3x+0x9a>
 33e:	ff 0f       	add	r31, r31
 340:	bb 1f       	adc	r27, r27
 342:	66 1f       	adc	r22, r22
 344:	77 1f       	adc	r23, r23
 346:	88 1f       	adc	r24, r24
 348:	c2 f7       	brpl	.-16     	; 0x33a <__addsf3x+0x6e>
 34a:	0e c0       	rjmp	.+28     	; 0x368 <__addsf3x+0x9c>
 34c:	ba 0f       	add	r27, r26
 34e:	62 1f       	adc	r22, r18
 350:	73 1f       	adc	r23, r19
 352:	84 1f       	adc	r24, r20
 354:	48 f4       	brcc	.+18     	; 0x368 <__addsf3x+0x9c>
 356:	87 95       	ror	r24
 358:	77 95       	ror	r23
 35a:	67 95       	ror	r22
 35c:	b7 95       	ror	r27
 35e:	f7 95       	ror	r31
 360:	9e 3f       	cpi	r25, 0xFE	; 254
 362:	08 f0       	brcs	.+2      	; 0x366 <__addsf3x+0x9a>
 364:	b0 cf       	rjmp	.-160    	; 0x2c6 <__addsf3+0x28>
 366:	93 95       	inc	r25
 368:	88 0f       	add	r24, r24
 36a:	08 f0       	brcs	.+2      	; 0x36e <__addsf3x+0xa2>
 36c:	99 27       	eor	r25, r25
 36e:	ee 0f       	add	r30, r30
 370:	97 95       	ror	r25
 372:	87 95       	ror	r24
 374:	08 95       	ret

00000376 <__cmpsf2>:
 376:	0e 94 9e 02 	call	0x53c	; 0x53c <__fp_cmp>
 37a:	08 f4       	brcc	.+2      	; 0x37e <__cmpsf2+0x8>
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	08 95       	ret

00000380 <__divsf3>:
 380:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <__divsf3x>
 384:	0c 94 d9 02 	jmp	0x5b2	; 0x5b2 <__fp_round>
 388:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <__fp_pscB>
 38c:	58 f0       	brcs	.+22     	; 0x3a4 <__divsf3+0x24>
 38e:	0e 94 cb 02 	call	0x596	; 0x596 <__fp_pscA>
 392:	40 f0       	brcs	.+16     	; 0x3a4 <__divsf3+0x24>
 394:	29 f4       	brne	.+10     	; 0x3a0 <__divsf3+0x20>
 396:	5f 3f       	cpi	r21, 0xFF	; 255
 398:	29 f0       	breq	.+10     	; 0x3a4 <__divsf3+0x24>
 39a:	0c 94 c2 02 	jmp	0x584	; 0x584 <__fp_inf>
 39e:	51 11       	cpse	r21, r1
 3a0:	0c 94 0d 03 	jmp	0x61a	; 0x61a <__fp_szero>
 3a4:	0c 94 c8 02 	jmp	0x590	; 0x590 <__fp_nan>

000003a8 <__divsf3x>:
 3a8:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <__fp_split3>
 3ac:	68 f3       	brcs	.-38     	; 0x388 <__divsf3+0x8>

000003ae <__divsf3_pse>:
 3ae:	99 23       	and	r25, r25
 3b0:	b1 f3       	breq	.-20     	; 0x39e <__divsf3+0x1e>
 3b2:	55 23       	and	r21, r21
 3b4:	91 f3       	breq	.-28     	; 0x39a <__divsf3+0x1a>
 3b6:	95 1b       	sub	r25, r21
 3b8:	55 0b       	sbc	r21, r21
 3ba:	bb 27       	eor	r27, r27
 3bc:	aa 27       	eor	r26, r26
 3be:	62 17       	cp	r22, r18
 3c0:	73 07       	cpc	r23, r19
 3c2:	84 07       	cpc	r24, r20
 3c4:	38 f0       	brcs	.+14     	; 0x3d4 <__divsf3_pse+0x26>
 3c6:	9f 5f       	subi	r25, 0xFF	; 255
 3c8:	5f 4f       	sbci	r21, 0xFF	; 255
 3ca:	22 0f       	add	r18, r18
 3cc:	33 1f       	adc	r19, r19
 3ce:	44 1f       	adc	r20, r20
 3d0:	aa 1f       	adc	r26, r26
 3d2:	a9 f3       	breq	.-22     	; 0x3be <__divsf3_pse+0x10>
 3d4:	35 d0       	rcall	.+106    	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 3d6:	0e 2e       	mov	r0, r30
 3d8:	3a f0       	brmi	.+14     	; 0x3e8 <__divsf3_pse+0x3a>
 3da:	e0 e8       	ldi	r30, 0x80	; 128
 3dc:	32 d0       	rcall	.+100    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 3de:	91 50       	subi	r25, 0x01	; 1
 3e0:	50 40       	sbci	r21, 0x00	; 0
 3e2:	e6 95       	lsr	r30
 3e4:	00 1c       	adc	r0, r0
 3e6:	ca f7       	brpl	.-14     	; 0x3da <__divsf3_pse+0x2c>
 3e8:	2b d0       	rcall	.+86     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 3ea:	fe 2f       	mov	r31, r30
 3ec:	29 d0       	rcall	.+82     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 3ee:	66 0f       	add	r22, r22
 3f0:	77 1f       	adc	r23, r23
 3f2:	88 1f       	adc	r24, r24
 3f4:	bb 1f       	adc	r27, r27
 3f6:	26 17       	cp	r18, r22
 3f8:	37 07       	cpc	r19, r23
 3fa:	48 07       	cpc	r20, r24
 3fc:	ab 07       	cpc	r26, r27
 3fe:	b0 e8       	ldi	r27, 0x80	; 128
 400:	09 f0       	breq	.+2      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 402:	bb 0b       	sbc	r27, r27
 404:	80 2d       	mov	r24, r0
 406:	bf 01       	movw	r22, r30
 408:	ff 27       	eor	r31, r31
 40a:	93 58       	subi	r25, 0x83	; 131
 40c:	5f 4f       	sbci	r21, 0xFF	; 255
 40e:	3a f0       	brmi	.+14     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 410:	9e 3f       	cpi	r25, 0xFE	; 254
 412:	51 05       	cpc	r21, r1
 414:	78 f0       	brcs	.+30     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 416:	0c 94 c2 02 	jmp	0x584	; 0x584 <__fp_inf>
 41a:	0c 94 0d 03 	jmp	0x61a	; 0x61a <__fp_szero>
 41e:	5f 3f       	cpi	r21, 0xFF	; 255
 420:	e4 f3       	brlt	.-8      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 422:	98 3e       	cpi	r25, 0xE8	; 232
 424:	d4 f3       	brlt	.-12     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 426:	86 95       	lsr	r24
 428:	77 95       	ror	r23
 42a:	67 95       	ror	r22
 42c:	b7 95       	ror	r27
 42e:	f7 95       	ror	r31
 430:	9f 5f       	subi	r25, 0xFF	; 255
 432:	c9 f7       	brne	.-14     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 434:	88 0f       	add	r24, r24
 436:	91 1d       	adc	r25, r1
 438:	96 95       	lsr	r25
 43a:	87 95       	ror	r24
 43c:	97 f9       	bld	r25, 7
 43e:	08 95       	ret
 440:	e1 e0       	ldi	r30, 0x01	; 1
 442:	66 0f       	add	r22, r22
 444:	77 1f       	adc	r23, r23
 446:	88 1f       	adc	r24, r24
 448:	bb 1f       	adc	r27, r27
 44a:	62 17       	cp	r22, r18
 44c:	73 07       	cpc	r23, r19
 44e:	84 07       	cpc	r24, r20
 450:	ba 07       	cpc	r27, r26
 452:	20 f0       	brcs	.+8      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 454:	62 1b       	sub	r22, r18
 456:	73 0b       	sbc	r23, r19
 458:	84 0b       	sbc	r24, r20
 45a:	ba 0b       	sbc	r27, r26
 45c:	ee 1f       	adc	r30, r30
 45e:	88 f7       	brcc	.-30     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 460:	e0 95       	com	r30
 462:	08 95       	ret

00000464 <__fixunssfsi>:
 464:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <__fp_splitA>
 468:	88 f0       	brcs	.+34     	; 0x48c <__fixunssfsi+0x28>
 46a:	9f 57       	subi	r25, 0x7F	; 127
 46c:	98 f0       	brcs	.+38     	; 0x494 <__fixunssfsi+0x30>
 46e:	b9 2f       	mov	r27, r25
 470:	99 27       	eor	r25, r25
 472:	b7 51       	subi	r27, 0x17	; 23
 474:	b0 f0       	brcs	.+44     	; 0x4a2 <__fixunssfsi+0x3e>
 476:	e1 f0       	breq	.+56     	; 0x4b0 <__fixunssfsi+0x4c>
 478:	66 0f       	add	r22, r22
 47a:	77 1f       	adc	r23, r23
 47c:	88 1f       	adc	r24, r24
 47e:	99 1f       	adc	r25, r25
 480:	1a f0       	brmi	.+6      	; 0x488 <__fixunssfsi+0x24>
 482:	ba 95       	dec	r27
 484:	c9 f7       	brne	.-14     	; 0x478 <__fixunssfsi+0x14>
 486:	14 c0       	rjmp	.+40     	; 0x4b0 <__fixunssfsi+0x4c>
 488:	b1 30       	cpi	r27, 0x01	; 1
 48a:	91 f0       	breq	.+36     	; 0x4b0 <__fixunssfsi+0x4c>
 48c:	0e 94 0c 03 	call	0x618	; 0x618 <__fp_zero>
 490:	b1 e0       	ldi	r27, 0x01	; 1
 492:	08 95       	ret
 494:	0c 94 0c 03 	jmp	0x618	; 0x618 <__fp_zero>
 498:	67 2f       	mov	r22, r23
 49a:	78 2f       	mov	r23, r24
 49c:	88 27       	eor	r24, r24
 49e:	b8 5f       	subi	r27, 0xF8	; 248
 4a0:	39 f0       	breq	.+14     	; 0x4b0 <__fixunssfsi+0x4c>
 4a2:	b9 3f       	cpi	r27, 0xF9	; 249
 4a4:	cc f3       	brlt	.-14     	; 0x498 <__fixunssfsi+0x34>
 4a6:	86 95       	lsr	r24
 4a8:	77 95       	ror	r23
 4aa:	67 95       	ror	r22
 4ac:	b3 95       	inc	r27
 4ae:	d9 f7       	brne	.-10     	; 0x4a6 <__fixunssfsi+0x42>
 4b0:	3e f4       	brtc	.+14     	; 0x4c0 <__fixunssfsi+0x5c>
 4b2:	90 95       	com	r25
 4b4:	80 95       	com	r24
 4b6:	70 95       	com	r23
 4b8:	61 95       	neg	r22
 4ba:	7f 4f       	sbci	r23, 0xFF	; 255
 4bc:	8f 4f       	sbci	r24, 0xFF	; 255
 4be:	9f 4f       	sbci	r25, 0xFF	; 255
 4c0:	08 95       	ret

000004c2 <__floatunsisf>:
 4c2:	e8 94       	clt
 4c4:	09 c0       	rjmp	.+18     	; 0x4d8 <__floatsisf+0x12>

000004c6 <__floatsisf>:
 4c6:	97 fb       	bst	r25, 7
 4c8:	3e f4       	brtc	.+14     	; 0x4d8 <__floatsisf+0x12>
 4ca:	90 95       	com	r25
 4cc:	80 95       	com	r24
 4ce:	70 95       	com	r23
 4d0:	61 95       	neg	r22
 4d2:	7f 4f       	sbci	r23, 0xFF	; 255
 4d4:	8f 4f       	sbci	r24, 0xFF	; 255
 4d6:	9f 4f       	sbci	r25, 0xFF	; 255
 4d8:	99 23       	and	r25, r25
 4da:	a9 f0       	breq	.+42     	; 0x506 <__floatsisf+0x40>
 4dc:	f9 2f       	mov	r31, r25
 4de:	96 e9       	ldi	r25, 0x96	; 150
 4e0:	bb 27       	eor	r27, r27
 4e2:	93 95       	inc	r25
 4e4:	f6 95       	lsr	r31
 4e6:	87 95       	ror	r24
 4e8:	77 95       	ror	r23
 4ea:	67 95       	ror	r22
 4ec:	b7 95       	ror	r27
 4ee:	f1 11       	cpse	r31, r1
 4f0:	f8 cf       	rjmp	.-16     	; 0x4e2 <__floatsisf+0x1c>
 4f2:	fa f4       	brpl	.+62     	; 0x532 <__floatsisf+0x6c>
 4f4:	bb 0f       	add	r27, r27
 4f6:	11 f4       	brne	.+4      	; 0x4fc <__floatsisf+0x36>
 4f8:	60 ff       	sbrs	r22, 0
 4fa:	1b c0       	rjmp	.+54     	; 0x532 <__floatsisf+0x6c>
 4fc:	6f 5f       	subi	r22, 0xFF	; 255
 4fe:	7f 4f       	sbci	r23, 0xFF	; 255
 500:	8f 4f       	sbci	r24, 0xFF	; 255
 502:	9f 4f       	sbci	r25, 0xFF	; 255
 504:	16 c0       	rjmp	.+44     	; 0x532 <__floatsisf+0x6c>
 506:	88 23       	and	r24, r24
 508:	11 f0       	breq	.+4      	; 0x50e <__floatsisf+0x48>
 50a:	96 e9       	ldi	r25, 0x96	; 150
 50c:	11 c0       	rjmp	.+34     	; 0x530 <__floatsisf+0x6a>
 50e:	77 23       	and	r23, r23
 510:	21 f0       	breq	.+8      	; 0x51a <__floatsisf+0x54>
 512:	9e e8       	ldi	r25, 0x8E	; 142
 514:	87 2f       	mov	r24, r23
 516:	76 2f       	mov	r23, r22
 518:	05 c0       	rjmp	.+10     	; 0x524 <__floatsisf+0x5e>
 51a:	66 23       	and	r22, r22
 51c:	71 f0       	breq	.+28     	; 0x53a <__floatsisf+0x74>
 51e:	96 e8       	ldi	r25, 0x86	; 134
 520:	86 2f       	mov	r24, r22
 522:	70 e0       	ldi	r23, 0x00	; 0
 524:	60 e0       	ldi	r22, 0x00	; 0
 526:	2a f0       	brmi	.+10     	; 0x532 <__floatsisf+0x6c>
 528:	9a 95       	dec	r25
 52a:	66 0f       	add	r22, r22
 52c:	77 1f       	adc	r23, r23
 52e:	88 1f       	adc	r24, r24
 530:	da f7       	brpl	.-10     	; 0x528 <__floatsisf+0x62>
 532:	88 0f       	add	r24, r24
 534:	96 95       	lsr	r25
 536:	87 95       	ror	r24
 538:	97 f9       	bld	r25, 7
 53a:	08 95       	ret

0000053c <__fp_cmp>:
 53c:	99 0f       	add	r25, r25
 53e:	00 08       	sbc	r0, r0
 540:	55 0f       	add	r21, r21
 542:	aa 0b       	sbc	r26, r26
 544:	e0 e8       	ldi	r30, 0x80	; 128
 546:	fe ef       	ldi	r31, 0xFE	; 254
 548:	16 16       	cp	r1, r22
 54a:	17 06       	cpc	r1, r23
 54c:	e8 07       	cpc	r30, r24
 54e:	f9 07       	cpc	r31, r25
 550:	c0 f0       	brcs	.+48     	; 0x582 <__fp_cmp+0x46>
 552:	12 16       	cp	r1, r18
 554:	13 06       	cpc	r1, r19
 556:	e4 07       	cpc	r30, r20
 558:	f5 07       	cpc	r31, r21
 55a:	98 f0       	brcs	.+38     	; 0x582 <__fp_cmp+0x46>
 55c:	62 1b       	sub	r22, r18
 55e:	73 0b       	sbc	r23, r19
 560:	84 0b       	sbc	r24, r20
 562:	95 0b       	sbc	r25, r21
 564:	39 f4       	brne	.+14     	; 0x574 <__fp_cmp+0x38>
 566:	0a 26       	eor	r0, r26
 568:	61 f0       	breq	.+24     	; 0x582 <__fp_cmp+0x46>
 56a:	23 2b       	or	r18, r19
 56c:	24 2b       	or	r18, r20
 56e:	25 2b       	or	r18, r21
 570:	21 f4       	brne	.+8      	; 0x57a <__fp_cmp+0x3e>
 572:	08 95       	ret
 574:	0a 26       	eor	r0, r26
 576:	09 f4       	brne	.+2      	; 0x57a <__fp_cmp+0x3e>
 578:	a1 40       	sbci	r26, 0x01	; 1
 57a:	a6 95       	lsr	r26
 57c:	8f ef       	ldi	r24, 0xFF	; 255
 57e:	81 1d       	adc	r24, r1
 580:	81 1d       	adc	r24, r1
 582:	08 95       	ret

00000584 <__fp_inf>:
 584:	97 f9       	bld	r25, 7
 586:	9f 67       	ori	r25, 0x7F	; 127
 588:	80 e8       	ldi	r24, 0x80	; 128
 58a:	70 e0       	ldi	r23, 0x00	; 0
 58c:	60 e0       	ldi	r22, 0x00	; 0
 58e:	08 95       	ret

00000590 <__fp_nan>:
 590:	9f ef       	ldi	r25, 0xFF	; 255
 592:	80 ec       	ldi	r24, 0xC0	; 192
 594:	08 95       	ret

00000596 <__fp_pscA>:
 596:	00 24       	eor	r0, r0
 598:	0a 94       	dec	r0
 59a:	16 16       	cp	r1, r22
 59c:	17 06       	cpc	r1, r23
 59e:	18 06       	cpc	r1, r24
 5a0:	09 06       	cpc	r0, r25
 5a2:	08 95       	ret

000005a4 <__fp_pscB>:
 5a4:	00 24       	eor	r0, r0
 5a6:	0a 94       	dec	r0
 5a8:	12 16       	cp	r1, r18
 5aa:	13 06       	cpc	r1, r19
 5ac:	14 06       	cpc	r1, r20
 5ae:	05 06       	cpc	r0, r21
 5b0:	08 95       	ret

000005b2 <__fp_round>:
 5b2:	09 2e       	mov	r0, r25
 5b4:	03 94       	inc	r0
 5b6:	00 0c       	add	r0, r0
 5b8:	11 f4       	brne	.+4      	; 0x5be <__fp_round+0xc>
 5ba:	88 23       	and	r24, r24
 5bc:	52 f0       	brmi	.+20     	; 0x5d2 <__fp_round+0x20>
 5be:	bb 0f       	add	r27, r27
 5c0:	40 f4       	brcc	.+16     	; 0x5d2 <__fp_round+0x20>
 5c2:	bf 2b       	or	r27, r31
 5c4:	11 f4       	brne	.+4      	; 0x5ca <__fp_round+0x18>
 5c6:	60 ff       	sbrs	r22, 0
 5c8:	04 c0       	rjmp	.+8      	; 0x5d2 <__fp_round+0x20>
 5ca:	6f 5f       	subi	r22, 0xFF	; 255
 5cc:	7f 4f       	sbci	r23, 0xFF	; 255
 5ce:	8f 4f       	sbci	r24, 0xFF	; 255
 5d0:	9f 4f       	sbci	r25, 0xFF	; 255
 5d2:	08 95       	ret

000005d4 <__fp_split3>:
 5d4:	57 fd       	sbrc	r21, 7
 5d6:	90 58       	subi	r25, 0x80	; 128
 5d8:	44 0f       	add	r20, r20
 5da:	55 1f       	adc	r21, r21
 5dc:	59 f0       	breq	.+22     	; 0x5f4 <__fp_splitA+0x10>
 5de:	5f 3f       	cpi	r21, 0xFF	; 255
 5e0:	71 f0       	breq	.+28     	; 0x5fe <__fp_splitA+0x1a>
 5e2:	47 95       	ror	r20

000005e4 <__fp_splitA>:
 5e4:	88 0f       	add	r24, r24
 5e6:	97 fb       	bst	r25, 7
 5e8:	99 1f       	adc	r25, r25
 5ea:	61 f0       	breq	.+24     	; 0x604 <__fp_splitA+0x20>
 5ec:	9f 3f       	cpi	r25, 0xFF	; 255
 5ee:	79 f0       	breq	.+30     	; 0x60e <__fp_splitA+0x2a>
 5f0:	87 95       	ror	r24
 5f2:	08 95       	ret
 5f4:	12 16       	cp	r1, r18
 5f6:	13 06       	cpc	r1, r19
 5f8:	14 06       	cpc	r1, r20
 5fa:	55 1f       	adc	r21, r21
 5fc:	f2 cf       	rjmp	.-28     	; 0x5e2 <__fp_split3+0xe>
 5fe:	46 95       	lsr	r20
 600:	f1 df       	rcall	.-30     	; 0x5e4 <__fp_splitA>
 602:	08 c0       	rjmp	.+16     	; 0x614 <__fp_splitA+0x30>
 604:	16 16       	cp	r1, r22
 606:	17 06       	cpc	r1, r23
 608:	18 06       	cpc	r1, r24
 60a:	99 1f       	adc	r25, r25
 60c:	f1 cf       	rjmp	.-30     	; 0x5f0 <__fp_splitA+0xc>
 60e:	86 95       	lsr	r24
 610:	71 05       	cpc	r23, r1
 612:	61 05       	cpc	r22, r1
 614:	08 94       	sec
 616:	08 95       	ret

00000618 <__fp_zero>:
 618:	e8 94       	clt

0000061a <__fp_szero>:
 61a:	bb 27       	eor	r27, r27
 61c:	66 27       	eor	r22, r22
 61e:	77 27       	eor	r23, r23
 620:	cb 01       	movw	r24, r22
 622:	97 f9       	bld	r25, 7
 624:	08 95       	ret

00000626 <_exit>:
 626:	f8 94       	cli

00000628 <__stop_program>:
 628:	ff cf       	rjmp	.-2      	; 0x628 <__stop_program>
