
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000766  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006f2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  00000766  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000766  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000798  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  000007d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000757  00000000  00000000  00000818  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000687  00000000  00000000  00000f6f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000320  00000000  00000000  000015f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f4  00000000  00000000  00001918  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000384  00000000  00000000  00001a0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000196  00000000  00000000  00001d90  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00001f26  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 e8 00 	jmp	0x1d0	; 0x1d0 <__vector_13>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 0f 01 	jmp	0x21e	; 0x21e <__vector_21>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a4 30       	cpi	r26, 0x04	; 4
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 52 00 	call	0xa4	; 0xa4 <main>
  88:	0c 94 77 03 	jmp	0x6ee	; 0x6ee <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <setupADC>:
		OCR2A = dutyCycle / 4 / 13.42 + 13;
    }
}
void setupADC()
{
	ADMUX = (1 << REFS0) | (1 << MUX0) | (1 << MUX1);
  90:	83 e4       	ldi	r24, 0x43	; 67
  92:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA = (1 << ADEN) | (1 << ADIE) | (1 << ADPS0) | (1 << ADPS1) | (1 << ADPS2);
  96:	8f e8       	ldi	r24, 0x8F	; 143
  98:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	DIDR0 = (1 << ADC5D);
  9c:	80 e2       	ldi	r24, 0x20	; 32
  9e:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
  a2:	08 95       	ret

000000a4 <main>:


int main(void)
{	
	
	DDRD = (1 << PORTD6) | (1 << PORTD5) | (1 << PORTD3) | (1 << PORTD4) | (1 << PORTD7);
  a4:	88 ef       	ldi	r24, 0xF8	; 248
  a6:	8a b9       	out	0x0a, r24	; 10
	DDRB = (1 << PORTB3) | (1 << PORTB0);
  a8:	89 e0       	ldi	r24, 0x09	; 9
  aa:	84 b9       	out	0x04, r24	; 4
	
	//計數器0為三色LED控制、1為pm2.5的脈波訊號、2為馬達的控制
	TCCR0A = (1 << COM0A1) | (1 << COM0B1) | (1 << WGM00);
  ac:	81 ea       	ldi	r24, 0xA1	; 161
  ae:	84 bd       	out	0x24, r24	; 36
	TCCR1A = (1 << COM1A1) | (1 << WGM10);
  b0:	81 e8       	ldi	r24, 0x81	; 129
  b2:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR2A = (1 << COM2A1) | (1 << COM2B1) | (1 << WGM20) | (1 << WGM21);
  b6:	83 ea       	ldi	r24, 0xA3	; 163
  b8:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
	TIMSK0 = (1 << TOIE0);
  bc:	c1 e0       	ldi	r28, 0x01	; 1
  be:	c0 93 6e 00 	sts	0x006E, r28	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	TIMSK1 = (1 << TOIE1);
  c2:	c0 93 6f 00 	sts	0x006F, r28	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	TIMSK2 = (1 << TOIE2);
  c6:	c0 93 70 00 	sts	0x0070, r28	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
	
	setupADC();
  ca:	0e 94 48 00 	call	0x90	; 0x90 <setupADC>
	
	sei();
  ce:	78 94       	sei
	
	TCCR0B = (1 << CS00);
  d0:	c5 bd       	out	0x25, r28	; 37
	TCCR1B = (1 << CS10) | (1 << CS12) | (1 << WGM12);
  d2:	8d e0       	ldi	r24, 0x0D	; 13
  d4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	TCCR2B = (1 << CS20) | (1 << CS22);
  d8:	85 e0       	ldi	r24, 0x05	; 5
  da:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>

	OCR1A = 103;
  de:	87 e6       	ldi	r24, 0x67	; 103
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  e6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
			PORTD &= 0 << PORTD4;
			PORTD &= 0 << PORTD7;
			PORTB |= 1 << PORTB0;
		}
		//PWM
		OCR2A = dutyCycle / 4 / 13.42 + 13;
  ea:	c3 eb       	ldi	r28, 0xB3	; 179
  ec:	d0 e0       	ldi	r29, 0x00	; 0
	OCR1A = 103;
	
    while(1)
    {
        //TODO:: Please write your application code
		if (dutyCycle < 50 ) //green
  ee:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <_edata>
  f2:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <_edata+0x1>
  f6:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <_edata+0x2>
  fa:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <_edata+0x3>
  fe:	20 e0       	ldi	r18, 0x00	; 0
 100:	30 e0       	ldi	r19, 0x00	; 0
 102:	48 e4       	ldi	r20, 0x48	; 72
 104:	52 e4       	ldi	r21, 0x42	; 66
 106:	c7 01       	movw	r24, r14
 108:	b6 01       	movw	r22, r12
 10a:	0e 94 b2 01 	call	0x364	; 0x364 <__cmpsf2>
 10e:	88 23       	and	r24, r24
 110:	3c f4       	brge	.+14     	; 0x120 <main+0x7c>
		{
			PORTD &= 0 << PORTD4;
 112:	8b b1       	in	r24, 0x0b	; 11
 114:	1b b8       	out	0x0b, r1	; 11
			PORTD &= 0 << PORTD7;
 116:	8b b1       	in	r24, 0x0b	; 11
 118:	1b b8       	out	0x0b, r1	; 11
			PORTB &= 0 << PORTB0;
 11a:	85 b1       	in	r24, 0x05	; 5
 11c:	15 b8       	out	0x05, r1	; 5
 11e:	34 c0       	rjmp	.+104    	; 0x188 <main+0xe4>
		}
		else if (dutyCycle < 100 ) //yellow
 120:	20 e0       	ldi	r18, 0x00	; 0
 122:	30 e0       	ldi	r19, 0x00	; 0
 124:	48 ec       	ldi	r20, 0xC8	; 200
 126:	52 e4       	ldi	r21, 0x42	; 66
 128:	c7 01       	movw	r24, r14
 12a:	b6 01       	movw	r22, r12
 12c:	0e 94 b2 01 	call	0x364	; 0x364 <__cmpsf2>
 130:	88 23       	and	r24, r24
 132:	34 f4       	brge	.+12     	; 0x140 <main+0x9c>
		{
			PORTD |= 1 << PORTD4;
 134:	5c 9a       	sbi	0x0b, 4	; 11
			PORTD &= 0 << PORTD7;
 136:	8b b1       	in	r24, 0x0b	; 11
 138:	1b b8       	out	0x0b, r1	; 11
			PORTB &= 0 << PORTB0;
 13a:	85 b1       	in	r24, 0x05	; 5
 13c:	15 b8       	out	0x05, r1	; 5
 13e:	24 c0       	rjmp	.+72     	; 0x188 <main+0xe4>
		}
		else if (dutyCycle < 150) //orange
 140:	20 e0       	ldi	r18, 0x00	; 0
 142:	30 e0       	ldi	r19, 0x00	; 0
 144:	46 e1       	ldi	r20, 0x16	; 22
 146:	53 e4       	ldi	r21, 0x43	; 67
 148:	c7 01       	movw	r24, r14
 14a:	b6 01       	movw	r22, r12
 14c:	0e 94 b2 01 	call	0x364	; 0x364 <__cmpsf2>
 150:	88 23       	and	r24, r24
 152:	34 f4       	brge	.+12     	; 0x160 <main+0xbc>
		{
			PORTD &= 0 << PORTD4;
 154:	8b b1       	in	r24, 0x0b	; 11
 156:	1b b8       	out	0x0b, r1	; 11
			PORTD |= 1 << PORTD7;
 158:	5f 9a       	sbi	0x0b, 7	; 11
			PORTB &= 0 << PORTB0;
 15a:	85 b1       	in	r24, 0x05	; 5
 15c:	15 b8       	out	0x05, r1	; 5
 15e:	14 c0       	rjmp	.+40     	; 0x188 <main+0xe4>
		}
		else if (dutyCycle < 200 ) //red
 160:	20 e0       	ldi	r18, 0x00	; 0
 162:	30 e0       	ldi	r19, 0x00	; 0
 164:	48 e4       	ldi	r20, 0x48	; 72
 166:	53 e4       	ldi	r21, 0x43	; 67
 168:	c7 01       	movw	r24, r14
 16a:	b6 01       	movw	r22, r12
 16c:	0e 94 b2 01 	call	0x364	; 0x364 <__cmpsf2>
 170:	88 23       	and	r24, r24
 172:	2c f4       	brge	.+10     	; 0x17e <main+0xda>
		{
			PORTD |= 1 << PORTD4;
 174:	5c 9a       	sbi	0x0b, 4	; 11
			PORTD |= 1 << PORTD7;
 176:	5f 9a       	sbi	0x0b, 7	; 11
			PORTB &= 0 << PORTB0;
 178:	85 b1       	in	r24, 0x05	; 5
 17a:	15 b8       	out	0x05, r1	; 5
 17c:	05 c0       	rjmp	.+10     	; 0x188 <main+0xe4>
		}
		else //purple
		{
			PORTD &= 0 << PORTD4;
 17e:	8b b1       	in	r24, 0x0b	; 11
 180:	1b b8       	out	0x0b, r1	; 11
			PORTD &= 0 << PORTD7;
 182:	8b b1       	in	r24, 0x0b	; 11
 184:	1b b8       	out	0x0b, r1	; 11
			PORTB |= 1 << PORTB0;
 186:	28 9a       	sbi	0x05, 0	; 5
		}
		//PWM
		OCR2A = dutyCycle / 4 / 13.42 + 13;
 188:	20 e0       	ldi	r18, 0x00	; 0
 18a:	30 e0       	ldi	r19, 0x00	; 0
 18c:	40 e8       	ldi	r20, 0x80	; 128
 18e:	5e e3       	ldi	r21, 0x3E	; 62
 190:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 194:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
 198:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
 19c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
 1a0:	0e 94 0a 03 	call	0x614	; 0x614 <__mulsf3>
 1a4:	22 e5       	ldi	r18, 0x52	; 82
 1a6:	38 eb       	ldi	r19, 0xB8	; 184
 1a8:	46 e5       	ldi	r20, 0x56	; 86
 1aa:	51 e4       	ldi	r21, 0x41	; 65
 1ac:	0e 94 b7 01 	call	0x36e	; 0x36e <__divsf3>
 1b0:	20 e0       	ldi	r18, 0x00	; 0
 1b2:	30 e0       	ldi	r19, 0x00	; 0
 1b4:	40 e5       	ldi	r20, 0x50	; 80
 1b6:	51 e4       	ldi	r21, 0x41	; 65
 1b8:	0e 94 46 01 	call	0x28c	; 0x28c <__addsf3>
 1bc:	0e 94 29 02 	call	0x452	; 0x452 <__fixunssfsi>
 1c0:	68 83       	st	Y, r22
    }
 1c2:	95 cf       	rjmp	.-214    	; 0xee <main+0x4a>

000001c4 <startConversion>:
	ADCSRA = (1 << ADEN) | (1 << ADIE) | (1 << ADPS0) | (1 << ADPS1) | (1 << ADPS2);
	DIDR0 = (1 << ADC5D);
}
void startConversion()
{
	ADCSRA |= (1 << ADSC);
 1c4:	ea e7       	ldi	r30, 0x7A	; 122
 1c6:	f0 e0       	ldi	r31, 0x00	; 0
 1c8:	80 81       	ld	r24, Z
 1ca:	80 64       	ori	r24, 0x40	; 64
 1cc:	80 83       	st	Z, r24
 1ce:	08 95       	ret

000001d0 <__vector_13>:
}


ISR(TIMER1_OVF_vect)
{
 1d0:	1f 92       	push	r1
 1d2:	0f 92       	push	r0
 1d4:	0f b6       	in	r0, 0x3f	; 63
 1d6:	0f 92       	push	r0
 1d8:	11 24       	eor	r1, r1
 1da:	2f 93       	push	r18
 1dc:	3f 93       	push	r19
 1de:	4f 93       	push	r20
 1e0:	5f 93       	push	r21
 1e2:	6f 93       	push	r22
 1e4:	7f 93       	push	r23
 1e6:	8f 93       	push	r24
 1e8:	9f 93       	push	r25
 1ea:	af 93       	push	r26
 1ec:	bf 93       	push	r27
 1ee:	ef 93       	push	r30
 1f0:	ff 93       	push	r31
	//pm2.5
	TCNT1L = 100;
 1f2:	84 e6       	ldi	r24, 0x64	; 100
 1f4:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	startConversion();
 1f8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <startConversion>
}
 1fc:	ff 91       	pop	r31
 1fe:	ef 91       	pop	r30
 200:	bf 91       	pop	r27
 202:	af 91       	pop	r26
 204:	9f 91       	pop	r25
 206:	8f 91       	pop	r24
 208:	7f 91       	pop	r23
 20a:	6f 91       	pop	r22
 20c:	5f 91       	pop	r21
 20e:	4f 91       	pop	r20
 210:	3f 91       	pop	r19
 212:	2f 91       	pop	r18
 214:	0f 90       	pop	r0
 216:	0f be       	out	0x3f, r0	; 63
 218:	0f 90       	pop	r0
 21a:	1f 90       	pop	r1
 21c:	18 95       	reti

0000021e <__vector_21>:

ISR(ADC_vect)
{
 21e:	1f 92       	push	r1
 220:	0f 92       	push	r0
 222:	0f b6       	in	r0, 0x3f	; 63
 224:	0f 92       	push	r0
 226:	11 24       	eor	r1, r1
 228:	2f 93       	push	r18
 22a:	3f 93       	push	r19
 22c:	4f 93       	push	r20
 22e:	5f 93       	push	r21
 230:	6f 93       	push	r22
 232:	7f 93       	push	r23
 234:	8f 93       	push	r24
 236:	9f 93       	push	r25
 238:	af 93       	push	r26
 23a:	bf 93       	push	r27
 23c:	ef 93       	push	r30
 23e:	ff 93       	push	r31
	dutyCycle = ADC/4;
 240:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 244:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 248:	76 95       	lsr	r23
 24a:	67 95       	ror	r22
 24c:	76 95       	lsr	r23
 24e:	67 95       	ror	r22
 250:	80 e0       	ldi	r24, 0x00	; 0
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	0e 94 58 02 	call	0x4b0	; 0x4b0 <__floatunsisf>
 258:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
 25c:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
 260:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_edata+0x2>
 264:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_edata+0x3>
}
 268:	ff 91       	pop	r31
 26a:	ef 91       	pop	r30
 26c:	bf 91       	pop	r27
 26e:	af 91       	pop	r26
 270:	9f 91       	pop	r25
 272:	8f 91       	pop	r24
 274:	7f 91       	pop	r23
 276:	6f 91       	pop	r22
 278:	5f 91       	pop	r21
 27a:	4f 91       	pop	r20
 27c:	3f 91       	pop	r19
 27e:	2f 91       	pop	r18
 280:	0f 90       	pop	r0
 282:	0f be       	out	0x3f, r0	; 63
 284:	0f 90       	pop	r0
 286:	1f 90       	pop	r1
 288:	18 95       	reti

0000028a <__subsf3>:
 28a:	50 58       	subi	r21, 0x80	; 128

0000028c <__addsf3>:
 28c:	bb 27       	eor	r27, r27
 28e:	aa 27       	eor	r26, r26
 290:	0e 94 5d 01 	call	0x2ba	; 0x2ba <__addsf3x>
 294:	0c 94 d0 02 	jmp	0x5a0	; 0x5a0 <__fp_round>
 298:	0e 94 c2 02 	call	0x584	; 0x584 <__fp_pscA>
 29c:	38 f0       	brcs	.+14     	; 0x2ac <__addsf3+0x20>
 29e:	0e 94 c9 02 	call	0x592	; 0x592 <__fp_pscB>
 2a2:	20 f0       	brcs	.+8      	; 0x2ac <__addsf3+0x20>
 2a4:	39 f4       	brne	.+14     	; 0x2b4 <__addsf3+0x28>
 2a6:	9f 3f       	cpi	r25, 0xFF	; 255
 2a8:	19 f4       	brne	.+6      	; 0x2b0 <__addsf3+0x24>
 2aa:	26 f4       	brtc	.+8      	; 0x2b4 <__addsf3+0x28>
 2ac:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__fp_nan>
 2b0:	0e f4       	brtc	.+2      	; 0x2b4 <__addsf3+0x28>
 2b2:	e0 95       	com	r30
 2b4:	e7 fb       	bst	r30, 7
 2b6:	0c 94 b9 02 	jmp	0x572	; 0x572 <__fp_inf>

000002ba <__addsf3x>:
 2ba:	e9 2f       	mov	r30, r25
 2bc:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__fp_split3>
 2c0:	58 f3       	brcs	.-42     	; 0x298 <__addsf3+0xc>
 2c2:	ba 17       	cp	r27, r26
 2c4:	62 07       	cpc	r22, r18
 2c6:	73 07       	cpc	r23, r19
 2c8:	84 07       	cpc	r24, r20
 2ca:	95 07       	cpc	r25, r21
 2cc:	20 f0       	brcs	.+8      	; 0x2d6 <__addsf3x+0x1c>
 2ce:	79 f4       	brne	.+30     	; 0x2ee <__addsf3x+0x34>
 2d0:	a6 f5       	brtc	.+104    	; 0x33a <__addsf3x+0x80>
 2d2:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_zero>
 2d6:	0e f4       	brtc	.+2      	; 0x2da <__addsf3x+0x20>
 2d8:	e0 95       	com	r30
 2da:	0b 2e       	mov	r0, r27
 2dc:	ba 2f       	mov	r27, r26
 2de:	a0 2d       	mov	r26, r0
 2e0:	0b 01       	movw	r0, r22
 2e2:	b9 01       	movw	r22, r18
 2e4:	90 01       	movw	r18, r0
 2e6:	0c 01       	movw	r0, r24
 2e8:	ca 01       	movw	r24, r20
 2ea:	a0 01       	movw	r20, r0
 2ec:	11 24       	eor	r1, r1
 2ee:	ff 27       	eor	r31, r31
 2f0:	59 1b       	sub	r21, r25
 2f2:	99 f0       	breq	.+38     	; 0x31a <__addsf3x+0x60>
 2f4:	59 3f       	cpi	r21, 0xF9	; 249
 2f6:	50 f4       	brcc	.+20     	; 0x30c <__addsf3x+0x52>
 2f8:	50 3e       	cpi	r21, 0xE0	; 224
 2fa:	68 f1       	brcs	.+90     	; 0x356 <__addsf3x+0x9c>
 2fc:	1a 16       	cp	r1, r26
 2fe:	f0 40       	sbci	r31, 0x00	; 0
 300:	a2 2f       	mov	r26, r18
 302:	23 2f       	mov	r18, r19
 304:	34 2f       	mov	r19, r20
 306:	44 27       	eor	r20, r20
 308:	58 5f       	subi	r21, 0xF8	; 248
 30a:	f3 cf       	rjmp	.-26     	; 0x2f2 <__addsf3x+0x38>
 30c:	46 95       	lsr	r20
 30e:	37 95       	ror	r19
 310:	27 95       	ror	r18
 312:	a7 95       	ror	r26
 314:	f0 40       	sbci	r31, 0x00	; 0
 316:	53 95       	inc	r21
 318:	c9 f7       	brne	.-14     	; 0x30c <__addsf3x+0x52>
 31a:	7e f4       	brtc	.+30     	; 0x33a <__addsf3x+0x80>
 31c:	1f 16       	cp	r1, r31
 31e:	ba 0b       	sbc	r27, r26
 320:	62 0b       	sbc	r22, r18
 322:	73 0b       	sbc	r23, r19
 324:	84 0b       	sbc	r24, r20
 326:	ba f0       	brmi	.+46     	; 0x356 <__addsf3x+0x9c>
 328:	91 50       	subi	r25, 0x01	; 1
 32a:	a1 f0       	breq	.+40     	; 0x354 <__addsf3x+0x9a>
 32c:	ff 0f       	add	r31, r31
 32e:	bb 1f       	adc	r27, r27
 330:	66 1f       	adc	r22, r22
 332:	77 1f       	adc	r23, r23
 334:	88 1f       	adc	r24, r24
 336:	c2 f7       	brpl	.-16     	; 0x328 <__addsf3x+0x6e>
 338:	0e c0       	rjmp	.+28     	; 0x356 <__addsf3x+0x9c>
 33a:	ba 0f       	add	r27, r26
 33c:	62 1f       	adc	r22, r18
 33e:	73 1f       	adc	r23, r19
 340:	84 1f       	adc	r24, r20
 342:	48 f4       	brcc	.+18     	; 0x356 <__addsf3x+0x9c>
 344:	87 95       	ror	r24
 346:	77 95       	ror	r23
 348:	67 95       	ror	r22
 34a:	b7 95       	ror	r27
 34c:	f7 95       	ror	r31
 34e:	9e 3f       	cpi	r25, 0xFE	; 254
 350:	08 f0       	brcs	.+2      	; 0x354 <__addsf3x+0x9a>
 352:	b0 cf       	rjmp	.-160    	; 0x2b4 <__addsf3+0x28>
 354:	93 95       	inc	r25
 356:	88 0f       	add	r24, r24
 358:	08 f0       	brcs	.+2      	; 0x35c <__addsf3x+0xa2>
 35a:	99 27       	eor	r25, r25
 35c:	ee 0f       	add	r30, r30
 35e:	97 95       	ror	r25
 360:	87 95       	ror	r24
 362:	08 95       	ret

00000364 <__cmpsf2>:
 364:	0e 94 95 02 	call	0x52a	; 0x52a <__fp_cmp>
 368:	08 f4       	brcc	.+2      	; 0x36c <__cmpsf2+0x8>
 36a:	81 e0       	ldi	r24, 0x01	; 1
 36c:	08 95       	ret

0000036e <__divsf3>:
 36e:	0e 94 cb 01 	call	0x396	; 0x396 <__divsf3x>
 372:	0c 94 d0 02 	jmp	0x5a0	; 0x5a0 <__fp_round>
 376:	0e 94 c9 02 	call	0x592	; 0x592 <__fp_pscB>
 37a:	58 f0       	brcs	.+22     	; 0x392 <__divsf3+0x24>
 37c:	0e 94 c2 02 	call	0x584	; 0x584 <__fp_pscA>
 380:	40 f0       	brcs	.+16     	; 0x392 <__divsf3+0x24>
 382:	29 f4       	brne	.+10     	; 0x38e <__divsf3+0x20>
 384:	5f 3f       	cpi	r21, 0xFF	; 255
 386:	29 f0       	breq	.+10     	; 0x392 <__divsf3+0x24>
 388:	0c 94 b9 02 	jmp	0x572	; 0x572 <__fp_inf>
 38c:	51 11       	cpse	r21, r1
 38e:	0c 94 04 03 	jmp	0x608	; 0x608 <__fp_szero>
 392:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__fp_nan>

00000396 <__divsf3x>:
 396:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__fp_split3>
 39a:	68 f3       	brcs	.-38     	; 0x376 <__divsf3+0x8>

0000039c <__divsf3_pse>:
 39c:	99 23       	and	r25, r25
 39e:	b1 f3       	breq	.-20     	; 0x38c <__divsf3+0x1e>
 3a0:	55 23       	and	r21, r21
 3a2:	91 f3       	breq	.-28     	; 0x388 <__divsf3+0x1a>
 3a4:	95 1b       	sub	r25, r21
 3a6:	55 0b       	sbc	r21, r21
 3a8:	bb 27       	eor	r27, r27
 3aa:	aa 27       	eor	r26, r26
 3ac:	62 17       	cp	r22, r18
 3ae:	73 07       	cpc	r23, r19
 3b0:	84 07       	cpc	r24, r20
 3b2:	38 f0       	brcs	.+14     	; 0x3c2 <__divsf3_pse+0x26>
 3b4:	9f 5f       	subi	r25, 0xFF	; 255
 3b6:	5f 4f       	sbci	r21, 0xFF	; 255
 3b8:	22 0f       	add	r18, r18
 3ba:	33 1f       	adc	r19, r19
 3bc:	44 1f       	adc	r20, r20
 3be:	aa 1f       	adc	r26, r26
 3c0:	a9 f3       	breq	.-22     	; 0x3ac <__divsf3_pse+0x10>
 3c2:	35 d0       	rcall	.+106    	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 3c4:	0e 2e       	mov	r0, r30
 3c6:	3a f0       	brmi	.+14     	; 0x3d6 <__divsf3_pse+0x3a>
 3c8:	e0 e8       	ldi	r30, 0x80	; 128
 3ca:	32 d0       	rcall	.+100    	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 3cc:	91 50       	subi	r25, 0x01	; 1
 3ce:	50 40       	sbci	r21, 0x00	; 0
 3d0:	e6 95       	lsr	r30
 3d2:	00 1c       	adc	r0, r0
 3d4:	ca f7       	brpl	.-14     	; 0x3c8 <__divsf3_pse+0x2c>
 3d6:	2b d0       	rcall	.+86     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 3d8:	fe 2f       	mov	r31, r30
 3da:	29 d0       	rcall	.+82     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 3dc:	66 0f       	add	r22, r22
 3de:	77 1f       	adc	r23, r23
 3e0:	88 1f       	adc	r24, r24
 3e2:	bb 1f       	adc	r27, r27
 3e4:	26 17       	cp	r18, r22
 3e6:	37 07       	cpc	r19, r23
 3e8:	48 07       	cpc	r20, r24
 3ea:	ab 07       	cpc	r26, r27
 3ec:	b0 e8       	ldi	r27, 0x80	; 128
 3ee:	09 f0       	breq	.+2      	; 0x3f2 <__divsf3_pse+0x56>
 3f0:	bb 0b       	sbc	r27, r27
 3f2:	80 2d       	mov	r24, r0
 3f4:	bf 01       	movw	r22, r30
 3f6:	ff 27       	eor	r31, r31
 3f8:	93 58       	subi	r25, 0x83	; 131
 3fa:	5f 4f       	sbci	r21, 0xFF	; 255
 3fc:	3a f0       	brmi	.+14     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3fe:	9e 3f       	cpi	r25, 0xFE	; 254
 400:	51 05       	cpc	r21, r1
 402:	78 f0       	brcs	.+30     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 404:	0c 94 b9 02 	jmp	0x572	; 0x572 <__fp_inf>
 408:	0c 94 04 03 	jmp	0x608	; 0x608 <__fp_szero>
 40c:	5f 3f       	cpi	r21, 0xFF	; 255
 40e:	e4 f3       	brlt	.-8      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 410:	98 3e       	cpi	r25, 0xE8	; 232
 412:	d4 f3       	brlt	.-12     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 414:	86 95       	lsr	r24
 416:	77 95       	ror	r23
 418:	67 95       	ror	r22
 41a:	b7 95       	ror	r27
 41c:	f7 95       	ror	r31
 41e:	9f 5f       	subi	r25, 0xFF	; 255
 420:	c9 f7       	brne	.-14     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 422:	88 0f       	add	r24, r24
 424:	91 1d       	adc	r25, r1
 426:	96 95       	lsr	r25
 428:	87 95       	ror	r24
 42a:	97 f9       	bld	r25, 7
 42c:	08 95       	ret
 42e:	e1 e0       	ldi	r30, 0x01	; 1
 430:	66 0f       	add	r22, r22
 432:	77 1f       	adc	r23, r23
 434:	88 1f       	adc	r24, r24
 436:	bb 1f       	adc	r27, r27
 438:	62 17       	cp	r22, r18
 43a:	73 07       	cpc	r23, r19
 43c:	84 07       	cpc	r24, r20
 43e:	ba 07       	cpc	r27, r26
 440:	20 f0       	brcs	.+8      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 442:	62 1b       	sub	r22, r18
 444:	73 0b       	sbc	r23, r19
 446:	84 0b       	sbc	r24, r20
 448:	ba 0b       	sbc	r27, r26
 44a:	ee 1f       	adc	r30, r30
 44c:	88 f7       	brcc	.-30     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 44e:	e0 95       	com	r30
 450:	08 95       	ret

00000452 <__fixunssfsi>:
 452:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <__fp_splitA>
 456:	88 f0       	brcs	.+34     	; 0x47a <__fixunssfsi+0x28>
 458:	9f 57       	subi	r25, 0x7F	; 127
 45a:	98 f0       	brcs	.+38     	; 0x482 <__fixunssfsi+0x30>
 45c:	b9 2f       	mov	r27, r25
 45e:	99 27       	eor	r25, r25
 460:	b7 51       	subi	r27, 0x17	; 23
 462:	b0 f0       	brcs	.+44     	; 0x490 <__fixunssfsi+0x3e>
 464:	e1 f0       	breq	.+56     	; 0x49e <__fixunssfsi+0x4c>
 466:	66 0f       	add	r22, r22
 468:	77 1f       	adc	r23, r23
 46a:	88 1f       	adc	r24, r24
 46c:	99 1f       	adc	r25, r25
 46e:	1a f0       	brmi	.+6      	; 0x476 <__fixunssfsi+0x24>
 470:	ba 95       	dec	r27
 472:	c9 f7       	brne	.-14     	; 0x466 <__fixunssfsi+0x14>
 474:	14 c0       	rjmp	.+40     	; 0x49e <__fixunssfsi+0x4c>
 476:	b1 30       	cpi	r27, 0x01	; 1
 478:	91 f0       	breq	.+36     	; 0x49e <__fixunssfsi+0x4c>
 47a:	0e 94 03 03 	call	0x606	; 0x606 <__fp_zero>
 47e:	b1 e0       	ldi	r27, 0x01	; 1
 480:	08 95       	ret
 482:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_zero>
 486:	67 2f       	mov	r22, r23
 488:	78 2f       	mov	r23, r24
 48a:	88 27       	eor	r24, r24
 48c:	b8 5f       	subi	r27, 0xF8	; 248
 48e:	39 f0       	breq	.+14     	; 0x49e <__fixunssfsi+0x4c>
 490:	b9 3f       	cpi	r27, 0xF9	; 249
 492:	cc f3       	brlt	.-14     	; 0x486 <__fixunssfsi+0x34>
 494:	86 95       	lsr	r24
 496:	77 95       	ror	r23
 498:	67 95       	ror	r22
 49a:	b3 95       	inc	r27
 49c:	d9 f7       	brne	.-10     	; 0x494 <__fixunssfsi+0x42>
 49e:	3e f4       	brtc	.+14     	; 0x4ae <__fixunssfsi+0x5c>
 4a0:	90 95       	com	r25
 4a2:	80 95       	com	r24
 4a4:	70 95       	com	r23
 4a6:	61 95       	neg	r22
 4a8:	7f 4f       	sbci	r23, 0xFF	; 255
 4aa:	8f 4f       	sbci	r24, 0xFF	; 255
 4ac:	9f 4f       	sbci	r25, 0xFF	; 255
 4ae:	08 95       	ret

000004b0 <__floatunsisf>:
 4b0:	e8 94       	clt
 4b2:	09 c0       	rjmp	.+18     	; 0x4c6 <__floatsisf+0x12>

000004b4 <__floatsisf>:
 4b4:	97 fb       	bst	r25, 7
 4b6:	3e f4       	brtc	.+14     	; 0x4c6 <__floatsisf+0x12>
 4b8:	90 95       	com	r25
 4ba:	80 95       	com	r24
 4bc:	70 95       	com	r23
 4be:	61 95       	neg	r22
 4c0:	7f 4f       	sbci	r23, 0xFF	; 255
 4c2:	8f 4f       	sbci	r24, 0xFF	; 255
 4c4:	9f 4f       	sbci	r25, 0xFF	; 255
 4c6:	99 23       	and	r25, r25
 4c8:	a9 f0       	breq	.+42     	; 0x4f4 <__floatsisf+0x40>
 4ca:	f9 2f       	mov	r31, r25
 4cc:	96 e9       	ldi	r25, 0x96	; 150
 4ce:	bb 27       	eor	r27, r27
 4d0:	93 95       	inc	r25
 4d2:	f6 95       	lsr	r31
 4d4:	87 95       	ror	r24
 4d6:	77 95       	ror	r23
 4d8:	67 95       	ror	r22
 4da:	b7 95       	ror	r27
 4dc:	f1 11       	cpse	r31, r1
 4de:	f8 cf       	rjmp	.-16     	; 0x4d0 <__floatsisf+0x1c>
 4e0:	fa f4       	brpl	.+62     	; 0x520 <__floatsisf+0x6c>
 4e2:	bb 0f       	add	r27, r27
 4e4:	11 f4       	brne	.+4      	; 0x4ea <__floatsisf+0x36>
 4e6:	60 ff       	sbrs	r22, 0
 4e8:	1b c0       	rjmp	.+54     	; 0x520 <__floatsisf+0x6c>
 4ea:	6f 5f       	subi	r22, 0xFF	; 255
 4ec:	7f 4f       	sbci	r23, 0xFF	; 255
 4ee:	8f 4f       	sbci	r24, 0xFF	; 255
 4f0:	9f 4f       	sbci	r25, 0xFF	; 255
 4f2:	16 c0       	rjmp	.+44     	; 0x520 <__floatsisf+0x6c>
 4f4:	88 23       	and	r24, r24
 4f6:	11 f0       	breq	.+4      	; 0x4fc <__floatsisf+0x48>
 4f8:	96 e9       	ldi	r25, 0x96	; 150
 4fa:	11 c0       	rjmp	.+34     	; 0x51e <__floatsisf+0x6a>
 4fc:	77 23       	and	r23, r23
 4fe:	21 f0       	breq	.+8      	; 0x508 <__floatsisf+0x54>
 500:	9e e8       	ldi	r25, 0x8E	; 142
 502:	87 2f       	mov	r24, r23
 504:	76 2f       	mov	r23, r22
 506:	05 c0       	rjmp	.+10     	; 0x512 <__floatsisf+0x5e>
 508:	66 23       	and	r22, r22
 50a:	71 f0       	breq	.+28     	; 0x528 <__floatsisf+0x74>
 50c:	96 e8       	ldi	r25, 0x86	; 134
 50e:	86 2f       	mov	r24, r22
 510:	70 e0       	ldi	r23, 0x00	; 0
 512:	60 e0       	ldi	r22, 0x00	; 0
 514:	2a f0       	brmi	.+10     	; 0x520 <__floatsisf+0x6c>
 516:	9a 95       	dec	r25
 518:	66 0f       	add	r22, r22
 51a:	77 1f       	adc	r23, r23
 51c:	88 1f       	adc	r24, r24
 51e:	da f7       	brpl	.-10     	; 0x516 <__floatsisf+0x62>
 520:	88 0f       	add	r24, r24
 522:	96 95       	lsr	r25
 524:	87 95       	ror	r24
 526:	97 f9       	bld	r25, 7
 528:	08 95       	ret

0000052a <__fp_cmp>:
 52a:	99 0f       	add	r25, r25
 52c:	00 08       	sbc	r0, r0
 52e:	55 0f       	add	r21, r21
 530:	aa 0b       	sbc	r26, r26
 532:	e0 e8       	ldi	r30, 0x80	; 128
 534:	fe ef       	ldi	r31, 0xFE	; 254
 536:	16 16       	cp	r1, r22
 538:	17 06       	cpc	r1, r23
 53a:	e8 07       	cpc	r30, r24
 53c:	f9 07       	cpc	r31, r25
 53e:	c0 f0       	brcs	.+48     	; 0x570 <__fp_cmp+0x46>
 540:	12 16       	cp	r1, r18
 542:	13 06       	cpc	r1, r19
 544:	e4 07       	cpc	r30, r20
 546:	f5 07       	cpc	r31, r21
 548:	98 f0       	brcs	.+38     	; 0x570 <__fp_cmp+0x46>
 54a:	62 1b       	sub	r22, r18
 54c:	73 0b       	sbc	r23, r19
 54e:	84 0b       	sbc	r24, r20
 550:	95 0b       	sbc	r25, r21
 552:	39 f4       	brne	.+14     	; 0x562 <__fp_cmp+0x38>
 554:	0a 26       	eor	r0, r26
 556:	61 f0       	breq	.+24     	; 0x570 <__fp_cmp+0x46>
 558:	23 2b       	or	r18, r19
 55a:	24 2b       	or	r18, r20
 55c:	25 2b       	or	r18, r21
 55e:	21 f4       	brne	.+8      	; 0x568 <__fp_cmp+0x3e>
 560:	08 95       	ret
 562:	0a 26       	eor	r0, r26
 564:	09 f4       	brne	.+2      	; 0x568 <__fp_cmp+0x3e>
 566:	a1 40       	sbci	r26, 0x01	; 1
 568:	a6 95       	lsr	r26
 56a:	8f ef       	ldi	r24, 0xFF	; 255
 56c:	81 1d       	adc	r24, r1
 56e:	81 1d       	adc	r24, r1
 570:	08 95       	ret

00000572 <__fp_inf>:
 572:	97 f9       	bld	r25, 7
 574:	9f 67       	ori	r25, 0x7F	; 127
 576:	80 e8       	ldi	r24, 0x80	; 128
 578:	70 e0       	ldi	r23, 0x00	; 0
 57a:	60 e0       	ldi	r22, 0x00	; 0
 57c:	08 95       	ret

0000057e <__fp_nan>:
 57e:	9f ef       	ldi	r25, 0xFF	; 255
 580:	80 ec       	ldi	r24, 0xC0	; 192
 582:	08 95       	ret

00000584 <__fp_pscA>:
 584:	00 24       	eor	r0, r0
 586:	0a 94       	dec	r0
 588:	16 16       	cp	r1, r22
 58a:	17 06       	cpc	r1, r23
 58c:	18 06       	cpc	r1, r24
 58e:	09 06       	cpc	r0, r25
 590:	08 95       	ret

00000592 <__fp_pscB>:
 592:	00 24       	eor	r0, r0
 594:	0a 94       	dec	r0
 596:	12 16       	cp	r1, r18
 598:	13 06       	cpc	r1, r19
 59a:	14 06       	cpc	r1, r20
 59c:	05 06       	cpc	r0, r21
 59e:	08 95       	ret

000005a0 <__fp_round>:
 5a0:	09 2e       	mov	r0, r25
 5a2:	03 94       	inc	r0
 5a4:	00 0c       	add	r0, r0
 5a6:	11 f4       	brne	.+4      	; 0x5ac <__fp_round+0xc>
 5a8:	88 23       	and	r24, r24
 5aa:	52 f0       	brmi	.+20     	; 0x5c0 <__fp_round+0x20>
 5ac:	bb 0f       	add	r27, r27
 5ae:	40 f4       	brcc	.+16     	; 0x5c0 <__fp_round+0x20>
 5b0:	bf 2b       	or	r27, r31
 5b2:	11 f4       	brne	.+4      	; 0x5b8 <__fp_round+0x18>
 5b4:	60 ff       	sbrs	r22, 0
 5b6:	04 c0       	rjmp	.+8      	; 0x5c0 <__fp_round+0x20>
 5b8:	6f 5f       	subi	r22, 0xFF	; 255
 5ba:	7f 4f       	sbci	r23, 0xFF	; 255
 5bc:	8f 4f       	sbci	r24, 0xFF	; 255
 5be:	9f 4f       	sbci	r25, 0xFF	; 255
 5c0:	08 95       	ret

000005c2 <__fp_split3>:
 5c2:	57 fd       	sbrc	r21, 7
 5c4:	90 58       	subi	r25, 0x80	; 128
 5c6:	44 0f       	add	r20, r20
 5c8:	55 1f       	adc	r21, r21
 5ca:	59 f0       	breq	.+22     	; 0x5e2 <__fp_splitA+0x10>
 5cc:	5f 3f       	cpi	r21, 0xFF	; 255
 5ce:	71 f0       	breq	.+28     	; 0x5ec <__fp_splitA+0x1a>
 5d0:	47 95       	ror	r20

000005d2 <__fp_splitA>:
 5d2:	88 0f       	add	r24, r24
 5d4:	97 fb       	bst	r25, 7
 5d6:	99 1f       	adc	r25, r25
 5d8:	61 f0       	breq	.+24     	; 0x5f2 <__fp_splitA+0x20>
 5da:	9f 3f       	cpi	r25, 0xFF	; 255
 5dc:	79 f0       	breq	.+30     	; 0x5fc <__fp_splitA+0x2a>
 5de:	87 95       	ror	r24
 5e0:	08 95       	ret
 5e2:	12 16       	cp	r1, r18
 5e4:	13 06       	cpc	r1, r19
 5e6:	14 06       	cpc	r1, r20
 5e8:	55 1f       	adc	r21, r21
 5ea:	f2 cf       	rjmp	.-28     	; 0x5d0 <__fp_split3+0xe>
 5ec:	46 95       	lsr	r20
 5ee:	f1 df       	rcall	.-30     	; 0x5d2 <__fp_splitA>
 5f0:	08 c0       	rjmp	.+16     	; 0x602 <__fp_splitA+0x30>
 5f2:	16 16       	cp	r1, r22
 5f4:	17 06       	cpc	r1, r23
 5f6:	18 06       	cpc	r1, r24
 5f8:	99 1f       	adc	r25, r25
 5fa:	f1 cf       	rjmp	.-30     	; 0x5de <__fp_splitA+0xc>
 5fc:	86 95       	lsr	r24
 5fe:	71 05       	cpc	r23, r1
 600:	61 05       	cpc	r22, r1
 602:	08 94       	sec
 604:	08 95       	ret

00000606 <__fp_zero>:
 606:	e8 94       	clt

00000608 <__fp_szero>:
 608:	bb 27       	eor	r27, r27
 60a:	66 27       	eor	r22, r22
 60c:	77 27       	eor	r23, r23
 60e:	cb 01       	movw	r24, r22
 610:	97 f9       	bld	r25, 7
 612:	08 95       	ret

00000614 <__mulsf3>:
 614:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3x>
 618:	0c 94 d0 02 	jmp	0x5a0	; 0x5a0 <__fp_round>
 61c:	0e 94 c2 02 	call	0x584	; 0x584 <__fp_pscA>
 620:	38 f0       	brcs	.+14     	; 0x630 <__mulsf3+0x1c>
 622:	0e 94 c9 02 	call	0x592	; 0x592 <__fp_pscB>
 626:	20 f0       	brcs	.+8      	; 0x630 <__mulsf3+0x1c>
 628:	95 23       	and	r25, r21
 62a:	11 f0       	breq	.+4      	; 0x630 <__mulsf3+0x1c>
 62c:	0c 94 b9 02 	jmp	0x572	; 0x572 <__fp_inf>
 630:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__fp_nan>
 634:	11 24       	eor	r1, r1
 636:	0c 94 04 03 	jmp	0x608	; 0x608 <__fp_szero>

0000063a <__mulsf3x>:
 63a:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__fp_split3>
 63e:	70 f3       	brcs	.-36     	; 0x61c <__mulsf3+0x8>

00000640 <__mulsf3_pse>:
 640:	95 9f       	mul	r25, r21
 642:	c1 f3       	breq	.-16     	; 0x634 <__mulsf3+0x20>
 644:	95 0f       	add	r25, r21
 646:	50 e0       	ldi	r21, 0x00	; 0
 648:	55 1f       	adc	r21, r21
 64a:	62 9f       	mul	r22, r18
 64c:	f0 01       	movw	r30, r0
 64e:	72 9f       	mul	r23, r18
 650:	bb 27       	eor	r27, r27
 652:	f0 0d       	add	r31, r0
 654:	b1 1d       	adc	r27, r1
 656:	63 9f       	mul	r22, r19
 658:	aa 27       	eor	r26, r26
 65a:	f0 0d       	add	r31, r0
 65c:	b1 1d       	adc	r27, r1
 65e:	aa 1f       	adc	r26, r26
 660:	64 9f       	mul	r22, r20
 662:	66 27       	eor	r22, r22
 664:	b0 0d       	add	r27, r0
 666:	a1 1d       	adc	r26, r1
 668:	66 1f       	adc	r22, r22
 66a:	82 9f       	mul	r24, r18
 66c:	22 27       	eor	r18, r18
 66e:	b0 0d       	add	r27, r0
 670:	a1 1d       	adc	r26, r1
 672:	62 1f       	adc	r22, r18
 674:	73 9f       	mul	r23, r19
 676:	b0 0d       	add	r27, r0
 678:	a1 1d       	adc	r26, r1
 67a:	62 1f       	adc	r22, r18
 67c:	83 9f       	mul	r24, r19
 67e:	a0 0d       	add	r26, r0
 680:	61 1d       	adc	r22, r1
 682:	22 1f       	adc	r18, r18
 684:	74 9f       	mul	r23, r20
 686:	33 27       	eor	r19, r19
 688:	a0 0d       	add	r26, r0
 68a:	61 1d       	adc	r22, r1
 68c:	23 1f       	adc	r18, r19
 68e:	84 9f       	mul	r24, r20
 690:	60 0d       	add	r22, r0
 692:	21 1d       	adc	r18, r1
 694:	82 2f       	mov	r24, r18
 696:	76 2f       	mov	r23, r22
 698:	6a 2f       	mov	r22, r26
 69a:	11 24       	eor	r1, r1
 69c:	9f 57       	subi	r25, 0x7F	; 127
 69e:	50 40       	sbci	r21, 0x00	; 0
 6a0:	9a f0       	brmi	.+38     	; 0x6c8 <__mulsf3_pse+0x88>
 6a2:	f1 f0       	breq	.+60     	; 0x6e0 <__mulsf3_pse+0xa0>
 6a4:	88 23       	and	r24, r24
 6a6:	4a f0       	brmi	.+18     	; 0x6ba <__mulsf3_pse+0x7a>
 6a8:	ee 0f       	add	r30, r30
 6aa:	ff 1f       	adc	r31, r31
 6ac:	bb 1f       	adc	r27, r27
 6ae:	66 1f       	adc	r22, r22
 6b0:	77 1f       	adc	r23, r23
 6b2:	88 1f       	adc	r24, r24
 6b4:	91 50       	subi	r25, 0x01	; 1
 6b6:	50 40       	sbci	r21, 0x00	; 0
 6b8:	a9 f7       	brne	.-22     	; 0x6a4 <__mulsf3_pse+0x64>
 6ba:	9e 3f       	cpi	r25, 0xFE	; 254
 6bc:	51 05       	cpc	r21, r1
 6be:	80 f0       	brcs	.+32     	; 0x6e0 <__mulsf3_pse+0xa0>
 6c0:	0c 94 b9 02 	jmp	0x572	; 0x572 <__fp_inf>
 6c4:	0c 94 04 03 	jmp	0x608	; 0x608 <__fp_szero>
 6c8:	5f 3f       	cpi	r21, 0xFF	; 255
 6ca:	e4 f3       	brlt	.-8      	; 0x6c4 <__mulsf3_pse+0x84>
 6cc:	98 3e       	cpi	r25, 0xE8	; 232
 6ce:	d4 f3       	brlt	.-12     	; 0x6c4 <__mulsf3_pse+0x84>
 6d0:	86 95       	lsr	r24
 6d2:	77 95       	ror	r23
 6d4:	67 95       	ror	r22
 6d6:	b7 95       	ror	r27
 6d8:	f7 95       	ror	r31
 6da:	e7 95       	ror	r30
 6dc:	9f 5f       	subi	r25, 0xFF	; 255
 6de:	c1 f7       	brne	.-16     	; 0x6d0 <__mulsf3_pse+0x90>
 6e0:	fe 2b       	or	r31, r30
 6e2:	88 0f       	add	r24, r24
 6e4:	91 1d       	adc	r25, r1
 6e6:	96 95       	lsr	r25
 6e8:	87 95       	ror	r24
 6ea:	97 f9       	bld	r25, 7
 6ec:	08 95       	ret

000006ee <_exit>:
 6ee:	f8 94       	cli

000006f0 <__stop_program>:
 6f0:	ff cf       	rjmp	.-2      	; 0x6f0 <__stop_program>
